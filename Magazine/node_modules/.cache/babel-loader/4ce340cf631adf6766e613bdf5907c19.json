{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/Post\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging);\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []); //빈배열이 들어가야 처음에 한번\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [post_list.map((p, idx) => {\n      if (p.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n        return /*#__PURE__*/_jsxDEV(Post, { ...p,\n          is_me: \"is_me\"\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 32\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Post, { ...p\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 32\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\\u3147\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostList.js"],"names":["React","useSelector","useDispatch","Post","actionCreators","postActions","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","useEffect","length","getPostFB","map","p","idx","user_id","uid","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAAQC,cAAc,IAAIC,WAA1B,QAA4C,uBAA5C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGd,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGf,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B;AAEAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAIR,SAAS,CAACS,MAAV,KAAqB,CAAzB,EAA4B;AACxBV,MAAAA,QAAQ,CAACH,WAAW,CAACc,SAAZ,EAAD,CAAR;AACH;AAEJ,GALD,EAKG,EALH,EAPwB,CAaxB;;AACA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eAGQV,SAAS,CAACW,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAEtB,UACID,CAAC,CAACR,SAAF,CAAYU,OAAZ,MAAwBV,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAC3BW,GADN,CADJ,EAGE;AACE,4BAAO,QAAC,IAAD,OAAqBH,CAArB;AAAwB,UAAA,KAAK,EAAC;AAA9B,WAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OALD,MAKO;AACH,4BAAO,QAAC,IAAD,OAAqBJ;AAArB,WAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AAEJ,KAXD,CAHR,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CArCD;;GAAMnB,Q;UACeJ,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALbK,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/Post\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\n\nconst PostList = (props) => {\n    const dispatch = useDispatch();\n    const post_list = useSelector((state) => state.post.list);\n    const user_info = useSelector((state) => state.user.user);\n    const is_loading = useSelector((state) => state.post.is_loading);\n    const paging = useSelector((state) => state.post.paging);\n\n    React.useEffect(() => {\n        if (post_list.length === 0) {\n            dispatch(postActions.getPostFB());\n        }\n\n    }, []);\n    //빈배열이 들어가야 처음에 한번\n    return (\n        <React.Fragment>\n            {/* <Post/> */}\n            {\n                post_list.map((p, idx) => {\n                    \n                    if (\n                        p.user_info.user_id === user_info\n                            ?.uid\n                    ) {\n                        return <Post key={p.id} {...p} is_me=\"is_me\"/>;\n                    } else {\n                        return <Post key={p.id} {...p}/>;\n                    }\n\n                })}\n            <button>ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ</button>\n            {/* <button\n                onClick={() => {\n                    dispatch(postActions.getPostFB(paging.next));\n                }}>추가로드</button> */}\n        </React.Fragment>\n    )\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}