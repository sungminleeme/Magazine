{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/Magazine/src/components/NotiBadge.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Badge } from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotiBadge = props => {\n  _s();\n\n  const [is_read, setIsRead] = React.useState(true);\n  const user_id = useSelector(state => state.user.user.uid);\n\n  const notiCheck = () => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n    notiDB.update({\n      read: true\n    });\n\n    props._onClick();\n  };\n\n  React.useEffect(() => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n    notiDB.on(\"value\", snapshot => {\n      console.log(snapshot.val());\n      setIsRead(snapshot.val().read);\n    });\n    return () => notiDB.off();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Badge, {\n      color: \"secondary\",\n      variant: \"dot\",\n      invisible: is_read,\n      onClick: notiCheck,\n      children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotiBadge, \"LS/a7YfB7a5Gf6HE6ng5YbkZ3TQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = NotiBadge;\nNotiBadge.defaultProps = {\n  _onClick: () => {}\n};\nexport default NotiBadge;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotiBadge\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/Magazine/src/components/NotiBadge.js"],"names":["React","Badge","NotificationsIcon","realtime","useSelector","NotiBadge","props","is_read","setIsRead","useState","user_id","state","user","uid","notiCheck","notiDB","ref","update","read","_onClick","useEffect","on","snapshot","console","log","val","off","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAA7B;AACA,QAAMC,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBC,GAA5B,CAA3B;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,MAAM,GAAGZ,QAAQ,CAACa,GAAT,CAAc,QAAON,OAAQ,EAA7B,CAAf;AACAK,IAAAA,MAAM,CAACE,MAAP,CAAc;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAd;;AACAZ,IAAAA,KAAK,CAACa,QAAN;AACD,GAJD;;AAMAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAML,MAAM,GAAGZ,QAAQ,CAACa,GAAT,CAAc,QAAON,OAAQ,EAA7B,CAAf;AAEAK,IAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAoBC,QAAD,IAAc;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,EAAZ;AAEAjB,MAAAA,SAAS,CAACc,QAAQ,CAACG,GAAT,GAAeP,IAAhB,CAAT;AACD,KAJD;AAMA,WAAO,MAAMH,MAAM,CAACW,GAAP,EAAb;AACD,GAVD,EAUG,EAVH;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,OAAO,EAAC,KAFV;AAGE,MAAA,SAAS,EAAEnB,OAHb;AAIE,MAAA,OAAO,EAAEO,SAJX;AAAA,6BAME,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjCD;;GAAMT,S;UAEYD,W;;;KAFZC,S;AAmCNA,SAAS,CAACsB,YAAV,GAAyB;AACvBR,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADK,CAAzB;AAIA,eAAed,SAAf","sourcesContent":["import React from \"react\";\nimport { Badge } from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst NotiBadge = (props) => {\n  const [is_read, setIsRead] = React.useState(true);\n  const user_id = useSelector((state) => state.user.user.uid);\n  const notiCheck = () => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n    notiDB.update({read: true});\n    props._onClick();\n  };\n\n  React.useEffect(() => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n\n    notiDB.on(\"value\", (snapshot) => {\n      console.log(snapshot.val());\n\n      setIsRead(snapshot.val().read);\n    });\n\n    return () => notiDB.off();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Badge\n        color=\"secondary\"\n        variant=\"dot\"\n        invisible={is_read}\n        onClick={notiCheck}\n      >\n        <NotificationsIcon />\n      </Badge>\n    </React.Fragment>\n  );\n};\n\nNotiBadge.defaultProps = {\n  _onClick: () => {},\n};\n\nexport default NotiBadge;\n"]},"metadata":{},"sourceType":"module"}