{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/Magazine/src/shared/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"../elements\";\nimport { storage } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_uploading = useSelector(state => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = e => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.files[0]);\n    console.log(fileInput.current.files[0]);\n    const reader = new FileReader();\n    const file = fileInput.current.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      console.log(reader.result);\n      dispatch(imageActions.setPreview(reader.result));\n    };\n  };\n\n  const uploadFB = () => {\n    let image = fileInput.current.files[0];\n    dispatch(imageActions.uploadImageFB(image));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: selectFile,\n      ref: fileInput,\n      disabled: is_uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"fqShzcroMxqgZOYDQq0wvmqh0V8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/Magazine/src/shared/Upload.js"],"names":["React","Button","storage","useDispatch","useSelector","actionCreators","imageActions","Upload","props","dispatch","is_uploading","state","image","uploading","fileInput","useRef","selectFile","e","console","log","target","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","setPreview","uploadFB","uploadImageFB"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAc,IAAIC,YAA1B,QAA6C,wBAA7C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAtB,CAAhC;AACA,QAAMC,SAAS,GAAGd,KAAK,CAACe,MAAN,EAAlB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AAEA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAGX,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAb;AAEAE,IAAAA,MAAM,CAACG,aAAP,CAAqBD,IAArB;;AAEAF,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACrBT,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACK,MAAnB;AACAnB,MAAAA,QAAQ,CAACH,YAAY,CAACuB,UAAb,CAAwBN,MAAM,CAACK,MAA/B,CAAD,CAAR;AACH,KAHD;AAKH,GAjBD;;AAmBA,QAAME,QAAQ,GAAG,MAAM;AACnB,QAAIlB,KAAK,GAAGE,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AACAZ,IAAAA,QAAQ,CAACH,YAAY,CAACyB,aAAb,CAA2BnB,KAA3B,CAAD,CAAR;AACH,GAHD;;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEI,UAA7B;AAAyC,MAAA,GAAG,EAAEF,SAA9C;AAAyD,MAAA,QAAQ,EAAEJ;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnCD;;GAAMH,M;UACeJ,W,EACIC,W;;;KAFnBG,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nimport {Button} from \"../elements\";\nimport {storage} from \"./firebase\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n    const dispatch = useDispatch();\n    const is_uploading = useSelector(state => state.image.uploading);\n    const fileInput = React.useRef();\n\n    const selectFile = (e) => {\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.files[0]);\n\n        console.log(fileInput.current.files[0]);\n\n        const reader = new FileReader();\n        const file = fileInput.current.files[0];\n\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n            console.log(reader.result);\n            dispatch(imageActions.setPreview(reader.result));\n        }\n\n    }\n\n    const uploadFB = () => {\n        let image = fileInput.current.files[0];\n        dispatch(imageActions.uploadImageFB(image));\n    }\n\n    return (\n        <React.Fragment>\n            <input type=\"file\" onChange={selectFile} ref={fileInput} disabled={is_uploading}/>\n            {/* <Button _onClick={uploadFB}>업로드하기</Button> */}\n        </React.Fragment>\n    )\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}