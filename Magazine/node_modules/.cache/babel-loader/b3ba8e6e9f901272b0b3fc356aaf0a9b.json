{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\n// PostList.js\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/Post\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport { Grid } from \"../elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging);\n  const {\n    history\n  } = props;\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      bg: \"#EFF6FF\",\n      padding: \"20px 0px\",\n      children: /*#__PURE__*/_jsxDEV(InfinityScroll, {\n        callNext: () => {\n          dispatch(postActions.getPostFB(paging.next));\n        },\n        is_next: paging.next ? true : false,\n        loading: is_loading,\n        children: post_list.map((p, idx) => {\n          if (p.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              bg: \"#ffffff\",\n              margin: \"8px 0px\",\n              _onClick: () => {\n                history.push(`/post/${p.id}`);\n              },\n              children: /*#__PURE__*/_jsxDEV(Post, { ...p,\n                is_me: true\n              }, p.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              bg: \"#ffffff\",\n              _onClick: () => {\n                history.push(`/post/${p.id}`);\n              },\n              children: /*#__PURE__*/_jsxDEV(Post, { ...p\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostList.js"],"names":["React","useSelector","useDispatch","Post","actionCreators","postActions","InfinityScroll","Grid","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","history","useEffect","length","getPostFB","next","map","p","idx","user_id","uid","push","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAAQC,cAAc,IAAIC,WAA1B,QAA4C,uBAA5C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,IAAR,QAAmB,aAAnB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGhB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGjB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAYV,KAAlB;AAEAT,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AAElB,QAAGT,SAAS,CAACU,MAAV,KAAqB,CAAxB,EAA0B;AACrBX,MAAAA,QAAQ,CAACL,WAAW,CAACiB,SAAZ,EAAD,CAAR;AACJ;AAEJ,GAND,EAMG,EANH;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,SAAV;AAAqB,MAAA,OAAO,EAAC,UAA7B;AAAA,6BAEE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAE,MAAM;AACdZ,UAAAA,QAAQ,CAACL,WAAW,CAACiB,SAAZ,CAAsBJ,MAAM,CAACK,IAA7B,CAAD,CAAR;AACD,SAHH;AAIE,QAAA,OAAO,EAAEL,MAAM,CAACK,IAAP,GAAc,IAAd,GAAqB,KAJhC;AAKE,QAAA,OAAO,EAAEN,UALX;AAAA,kBAOGN,SAAS,CAACa,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzB,cAAID,CAAC,CAACV,SAAF,CAAYY,OAAZ,MAAwBZ,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEa,GAAnC,CAAJ,EAA4C;AAC1C,gCACE,QAAC,IAAD;AACE,cAAA,EAAE,EAAC,SADL;AAEE,cAAA,MAAM,EAAC,SAFT;AAIE,cAAA,QAAQ,EAAE,MAAM;AACdT,gBAAAA,OAAO,CAACU,IAAR,CAAc,SAAQJ,CAAC,CAACK,EAAG,EAA3B;AACD,eANH;AAAA,qCAQE,QAAC,IAAD,OAAqBL,CAArB;AAAwB,gBAAA,KAAK;AAA7B,iBAAWA,CAAC,CAACK,EAAb;AAAA;AAAA;AAAA;AAAA;AARF,eAGOL,CAAC,CAACK,EAHT;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbD,MAaO;AACL,gCACE,QAAC,IAAD;AAEE,cAAA,EAAE,EAAC,SAFL;AAGE,cAAA,QAAQ,EAAE,MAAM;AACdX,gBAAAA,OAAO,CAACU,IAAR,CAAc,SAAQJ,CAAC,CAACK,EAAG,EAA3B;AACD,eALH;AAAA,qCAOE,QAAC,IAAD,OAAUL;AAAV;AAAA;AAAA;AAAA;AAAA;AAPF,eACHA,CAAC,CAACK,EADC;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD;AACF,SA3BA;AAPH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CH,CA5DD;;GAAMtB,Q;UACeN,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALbO,Q;AA8DN,eAAeA,QAAf","sourcesContent":["// PostList.js\nimport React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/Post\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements\";\n\n\nconst PostList = (props) => {\n    const dispatch = useDispatch();\n    const post_list = useSelector((state) => state.post.list);\n    const user_info = useSelector((state) => state.user.user);\n    const is_loading = useSelector((state) => state.post.is_loading);\n    const paging = useSelector((state) => state.post.paging);\n\n    const {history} = props;\n    \n    React.useEffect(() => {\n\n        if(post_list.length === 0){\n             dispatch(postActions.getPostFB());\n        }\n       \n    }, []);\n\n    return (\n      <React.Fragment>\n        <Grid bg={\"#EFF6FF\"} padding=\"20px 0px\">\n          {/* <Post/> */}\n          <InfinityScroll\n            callNext={() => {\n              dispatch(postActions.getPostFB(paging.next));\n            }}\n            is_next={paging.next ? true : false}\n            loading={is_loading}\n          >\n            {post_list.map((p, idx) => {\n              if (p.user_info.user_id === user_info?.uid) {\n                return (\n                  <Grid\n                    bg=\"#ffffff\"\n                    margin=\"8px 0px\"\n                    key={p.id}\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post key={p.id} {...p} is_me />\n                  </Grid>\n                );\n              } else {\n                return (\n                  <Grid\n\t\t\t\t\t\t\t\t\t\tkey={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n                );\n              }\n            })}\n          </InfinityScroll>\n        </Grid>\n      </React.Fragment>\n    );\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}