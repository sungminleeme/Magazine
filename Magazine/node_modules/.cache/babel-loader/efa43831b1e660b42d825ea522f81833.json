{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { storage } from \"../../shared/firebase\";\nconst UPLOADING = \"UPLOADING\";\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nconst uploading = createAction(UPLOADING, uploading => ({\n  uploading\n}));\nconst uploadImage = createAction(UPLOAD_IMAGE, image_url => ({\n  image_url\n})); // initial state\n\nconst initialState = {\n  image_url: \"\",\n  uploading: false\n};\n\nfunction uploadImageFB(image) {\n  return function (dispatch, getState, {\n    history\n  }) {\n    dispatch(uploading(true));\n\n    const _upload = storage.ref(`images/${image.name}`).put(image); //   업로드!\n\n\n    _upload.then(snapshot => {\n      console.log(snapshot);\n      snapshot.ref.getDownloadURL().then(url => {\n        dispatch(uploadImage(url));\n        console.log(url);\n      });\n    });\n  };\n} // reducer\n\n\nexport default handleActions({\n  [UPLOAD_IMAGE]: (state, action) => produce(state, draft => {\n    draft.image_url = action.payload.image_url;\n    draft.uploading = false;\n  }),\n  [UPLOADING]: (state, action) => produce(state, draft => {\n    draft.uploading = action.payload.uploading;\n  })\n}, initialState);\nconst actionCreators = {\n  uploadImage\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/image.js"],"names":["createAction","handleActions","produce","storage","UPLOADING","UPLOAD_IMAGE","uploading","uploadImage","image_url","initialState","uploadImageFB","image","dispatch","getState","history","_upload","ref","name","put","then","snapshot","console","log","getDownloadURL","url","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,SAAQC,OAAR,QAAsB,uBAAtB;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,MAAMC,SAAS,GAAGN,YAAY,CAACI,SAAD,EAAaE,SAAD,KAAgB;AAAEA,EAAAA;AAAF,CAAhB,CAAZ,CAA9B;AACA,MAAMC,WAAW,GAAGP,YAAY,CAACK,YAAD,EAAgBG,SAAD,KAAgB;AAAEA,EAAAA;AAAF,CAAhB,CAAf,CAAhC,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBD,EAAAA,SAAS,EAAE,EADM;AAEjBF,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAIE,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EAAyC;AAE5CF,IAAAA,QAAQ,CAACN,SAAS,CAAC,IAAD,CAAV,CAAR;;AACA,UAAMS,OAAO,GAAGZ,OAAO,CAACa,GAAR,CAAa,UAASL,KAAK,CAACM,IAAK,EAAjC,EAAoCC,GAApC,CAAwCP,KAAxC,CAAhB,CAH4C,CAK5C;;;AACEI,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAA,MAAAA,QAAQ,CAACJ,GAAT,CAAaO,cAAb,GAA8BJ,IAA9B,CAAoCK,GAAD,IAAS;AACxCZ,QAAAA,QAAQ,CAACL,WAAW,CAACiB,GAAD,CAAZ,CAAR;AACFH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAHC;AAKD,KARD;AASL,GAfD;AAgBD,C,CAGD;;;AACF,eAAevB,aAAa,CACxB;AACE,GAACI,YAAD,GAAgB,CAACoB,KAAD,EAAQC,MAAR,KACdxB,OAAO,CAACuB,KAAD,EAASE,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACnB,SAAN,GAAkBkB,MAAM,CAACE,OAAP,CAAepB,SAAjC;AACAmB,IAAAA,KAAK,CAACrB,SAAN,GAAkB,KAAlB;AACF,GAHM,CAFX;AAOE,GAACF,SAAD,GAAa,CAACqB,KAAD,EAAQC,MAAR,KACXxB,OAAO,CAACuB,KAAD,EAASE,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACrB,SAAN,GAAkBoB,MAAM,CAACE,OAAP,CAAetB,SAAjC;AACF,GAFM;AARX,CADwB,EAaxBG,YAbwB,CAA5B;AAgBE,MAAMoB,cAAc,GAAG;AACrBtB,EAAAA;AADqB,CAAvB;AAMA,SAASsB,cAAT","sourcesContent":["import {createAction, handleActions} from \"redux-actions\";\nimport produce from \"immer\";\n\nimport {storage} from \"../../shared/firebase\";\n\nconst UPLOADING = \"UPLOADING\";\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\n\nconst uploading = createAction(UPLOADING, (uploading) => ({ uploading }));\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({ image_url }));\n\n// initial state\nconst initialState = {\n    image_url: \"\",\n    uploading: false,\n  };\n  function uploadImageFB(image) {\n    return function (dispatch, getState, {history}) {\n\n        dispatch(uploading(true));\n        const _upload = storage.ref(`images/${image.name}`).put(image);\n\n        //   업로드!\n          _upload.then((snapshot) => {\n            console.log(snapshot);\n            \n            snapshot.ref.getDownloadURL().then((url) => {\n                dispatch(uploadImage(url));\n              console.log(url);\n          });\n    \n          });\n    };\n  }\n\n\n  // reducer\nexport default handleActions(\n    {\n      [UPLOAD_IMAGE]: (state, action) =>\n        produce(state, (draft) => {\n           draft.image_url = action.payload.image_url;\n           draft.uploading = false;\n        }),\n  \n      [UPLOADING]: (state, action) =>\n        produce(state, (draft) => {\n           draft.uploading = action.payload.uploading;\n        }),\n    },\n    initialState\n  );\n\n  const actionCreators = {\n    uploadImage,\n   \n  };\n\n\n  export { actionCreators }"]},"metadata":{},"sourceType":"module"}