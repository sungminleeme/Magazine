{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/components/CommentList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Image, Text } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment.list);\n  const {\n    post_id\n  } = props;\n  React.useEffect(() => {\n    if (!comment_list[post_id]) {\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n  }, []);\n\n  if (!comment_list[post_id] || !post_id) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: comment_list[post_id].map(c => {\n        return /*#__PURE__*/_jsxDEV(CommentItem, { ...c\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentList, \"5RsKkgUDEVZ5gflQywIMZfCltyI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentList;\nCommentList.defaultProps = {\n  post_id: null\n};\nexport default CommentList;\n\nconst CommentItem = props => {\n  const {\n    user_profile,\n    user_name,\n    user_id,\n    post_id,\n    contents,\n    insert_dt\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    is_flex: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      is_flex: true,\n      width: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        shape: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      is_flex: true,\n      margin: \"0px 4px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: insert_dt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = CommentItem;\nCommentItem.defaultProps = {\n  user_profile: \"\",\n  user_name: \"mean0\",\n  user_id: \"\",\n  post_id: 1,\n  contents: \"귀여운 고양이네요!\",\n  insert_dt: '2021-01-01 19:00:00'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentList\");\n$RefreshReg$(_c2, \"CommentItem\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/components/CommentList.js"],"names":["React","Grid","Image","Text","useDispatch","useSelector","actionCreators","commentActions","CommentList","props","dispatch","comment_list","state","comment","list","post_id","useEffect","getCommentFB","map","c","id","defaultProps","CommentItem","user_profile","user_name","user_id","contents","insert_dt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,IAArB,QAAgC,aAAhC;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAc,IAAIC,cAA1B,QAA+C,0BAA/C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,IAAxB,CAAhC;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAYN,KAAlB;AAEAT,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AAEpB,QAAG,CAACL,YAAY,CAACI,OAAD,CAAhB,EAA0B;AACxBL,MAAAA,QAAQ,CAACH,cAAc,CAACU,YAAf,CAA4BF,OAA5B,CAAD,CAAR;AACD;AACF,GALD,EAKG,EALH;;AAOA,MAAG,CAACJ,YAAY,CAACI,OAAD,CAAb,IAA0B,CAACA,OAA9B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAA,gBACGJ,YAAY,CAACI,OAAD,CAAZ,CAAsBG,GAAtB,CAA0BC,CAAC,IAAI;AAC9B,4BAAO,QAAC,WAAD,OAA4BA;AAA5B,WAAkBA,CAAC,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMZ,W;UACaJ,W,EACIC,W;;;KAFjBG,W;AA4BNA,WAAW,CAACa,YAAZ,GAA2B;AACzBN,EAAAA,OAAO,EAAE;AADgB,CAA3B;AAIA,eAAeP,WAAf;;AAGA,MAAMc,WAAW,GAAIb,KAAD,IAAW;AAE3B,QAAM;AAACc,IAAAA,YAAD;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,OAA1B;AAAmCV,IAAAA,OAAnC;AAA4CW,IAAAA,QAA5C;AAAsDC,IAAAA;AAAtD,MAAmElB,KAAzE;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,KAAK,EAAC,MAApB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYe;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,MAAM,EAAC,SAArB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBE;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAfD;;MAAML,W;AAiBNA,WAAW,CAACD,YAAZ,GAA2B;AACvBE,EAAAA,YAAY,EAAE,EADS;AAEvBC,EAAAA,SAAS,EAAE,OAFY;AAGvBC,EAAAA,OAAO,EAAE,EAHc;AAIvBV,EAAAA,OAAO,EAAE,CAJc;AAKvBW,EAAAA,QAAQ,EAAE,YALa;AAMvBC,EAAAA,SAAS,EAAE;AANY,CAA3B","sourcesContent":["import React from \"react\";\nimport {Grid, Image, Text} from \"../elements\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as commentActions} from \"../redux/modules/comment\";\n\nconst CommentList = (props) => {\n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment.list);\n\n  const {post_id} = props;\n\n  React.useEffect(() => {\n\n    if(!comment_list[post_id]){\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n  }, []);\n  \n  if(!comment_list[post_id] || !post_id){\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        {comment_list[post_id].map(c => {\n          return <CommentItem key={c.id} {...c}/>;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nCommentList.defaultProps = {\n  post_id: null,\n}\n\nexport default CommentList;\n\n\nconst CommentItem = (props) => {\n\n    const {user_profile, user_name, user_id, post_id, contents, insert_dt} = props;\n    return (\n        <Grid is_flex>\n            <Grid is_flex width=\"auto\">\n                <Image shape=\"circle\"/>\n                <Text bold>{user_name}</Text>\n            </Grid>\n            <Grid is_flex margin=\"0px 4px\">\n                <Text margin=\"0px\">{contents}</Text>\n                <Text margin=\"0px\">{insert_dt}</Text>\n            </Grid>\n        </Grid>\n    )\n}\n\nCommentItem.defaultProps = {\n    user_profile: \"\",\n    user_name: \"mean0\",\n    user_id: \"\",\n    post_id: 1,\n    contents: \"귀여운 고양이네요!\",\n    insert_dt: '2021-01-01 19:00:00'\n}"]},"metadata":{},"sourceType":"module"}