{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\"; // actions\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // actions creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'sungmin'\n}; //middleware actions\n\nconst loginAction = user => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(history);\n    dispatch(setUser(user));\n    history.push('/');\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(userCredential => {\n      // Signed in\n      var user = userCredential.user; // ...\n\n      console.log(user);\n      auth.currentUser = updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: ''\n        }));\n        history.push('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction,\n  signupFB\n};\nexport { actionCreators }; // const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","LOG_IN","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginAction","dispatch","getState","history","console","log","push","signupFB","id","pwd","createUserWithEmailAndPassword","then","userCredential","currentUser","updateProfile","displayName","user_profile","catch","error","errorCode","code","errorMessage","message","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {produce} from \"immer\";\n\nimport {setCookie, getCookie, deleteCookie} from \"../../shared/Cookie\";\n\nimport {auth} from \"../../shared/firebase\";\n\n// actions\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// actions creators\nconst logOut = createAction(LOG_OUT, (user) => ({user}));\nconst getUser = createAction(GET_USER, (user) => ({user}));\nconst setUser = createAction(SET_USER, (user) => ({user}))\n\n// initialState\nconst initialState = {\n    user: null,\n    is_login: false\n};\n\nconst user_initial = {\n    user_name: 'sungmin'\n};\n\n//middleware actions\nconst loginAction = (user) => {\n    return function (dispatch, getState, {history}) {\n        console.log(history);\n        dispatch(setUser(user));\n        history.push('/');\n    };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n    return function (dispatch, getState, {history}) {\n\n                auth\n                .createUserWithEmailAndPassword(id, pwd)\n                .then((userCredential) => {\n\n                        // Signed in\n                        var user = userCredential.user;\n                        // ...\n                        console.log(user);\n\n                        auth.currentUser = updateProfile({displayName: user_name})\n                            .then(() => {\n                                dispatch(setUser({user_name: user_name, id: id, user_profile: ''}));\n                                history.push('/');\n                            })\n                            .catch((error) => {\n                                console.log(error);\n                            });\n                }).catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n            });\n    };\n};\n\n//reducer\nexport default handleActions({\n    [SET_USER]: (state, action) => produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n    }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n    }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {})\n}, initialState);\n\n// action creator export\nconst actionCreators = {\n    logOut,\n    getUser,\n    loginAction,\n    signupFB\n};\n\nexport {\n    actionCreators\n};\n\n// const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});"]},"metadata":{},"sourceType":"module"}