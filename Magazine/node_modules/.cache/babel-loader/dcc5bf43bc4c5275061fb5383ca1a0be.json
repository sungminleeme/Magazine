{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/Post\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging);\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []); //빈배열이 들어가야 처음에 한번\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfinityScroll, {\n      callNext: () => {\n        console.log(\"next!\");\n      },\n      is_next: paging.next ? true : false,\n      loading: true,\n      children: post_list.map((p, idx) => {\n        if (p.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n          return /*#__PURE__*/_jsxDEV(Post, { ...p,\n            is_me: \"is_me\"\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Post, { ...p\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(postActions.getPostFB(paging.next));\n      },\n      children: \"\\uCD94\\uAC00\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostList.js"],"names":["React","useSelector","useDispatch","Post","actionCreators","postActions","InfinityScroll","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","useEffect","length","getPostFB","console","log","next","map","p","idx","user_id","uid","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAAQC,cAAc,IAAIC,WAA1B,QAA4C,uBAA5C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGf,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGhB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B;AAEAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AAClB,QAAIR,SAAS,CAACS,MAAV,KAAqB,CAAzB,EAA4B;AACxBV,MAAAA,QAAQ,CAACJ,WAAW,CAACe,SAAZ,EAAD,CAAR;AACH;AAEJ,GALD,EAKG,EALH,EAPwB,CAaxB;;AACA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAE,MAAK;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAHL;AAII,MAAA,OAAO,EAAEL,MAAM,CAACM,IAAP,GAAa,IAAb,GAAoB,KAJjC;AAKI,MAAA,OAAO,EAAE,IALb;AAAA,gBAQIb,SAAS,CAACc,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAEtB,YACID,CAAC,CAACX,SAAF,CAAYa,OAAZ,MAAwBb,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAC3Bc,GADN,CADJ,EAGE;AACE,8BAAO,QAAC,IAAD,OAAqBH,CAArB;AAAwB,YAAA,KAAK,EAAC;AAA9B,aAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SALD,MAKO;AACH,8BAAO,QAAC,IAAD,OAAqBJ;AAArB,aAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AAEJ,OAXD;AARJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAuBI;AACI,MAAA,OAAO,EAAE,MAAM;AACXpB,QAAAA,QAAQ,CAACJ,WAAW,CAACe,SAAZ,CAAsBH,MAAM,CAACM,IAA7B,CAAD,CAAR;AACH,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA5CD;;GAAMhB,Q;UACeL,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALbM,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/Post\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\n\nconst PostList = (props) => {\n    const dispatch = useDispatch();\n    const post_list = useSelector((state) => state.post.list);\n    const user_info = useSelector((state) => state.user.user);\n    const is_loading = useSelector((state) => state.post.is_loading);\n    const paging = useSelector((state) => state.post.paging);\n\n    React.useEffect(() => {\n        if (post_list.length === 0) {\n            dispatch(postActions.getPostFB());\n        }\n\n    }, []);\n    //빈배열이 들어가야 처음에 한번\n    return (\n        <React.Fragment>\n            {/* <Post/> */}\n            <InfinityScroll\n                callNext={() =>{\n                    console.log(\"next!\");\n                }}\n                is_next={paging.next? true : false}\n                loading={true}\n                >\n            {\n                post_list.map((p, idx) => {\n                    \n                    if (\n                        p.user_info.user_id === user_info\n                            ?.uid\n                    ) {\n                        return <Post key={p.id} {...p} is_me=\"is_me\"/>;\n                    } else {\n                        return <Post key={p.id} {...p}/>;\n                    }\n\n                })}\n            </InfinityScroll>\n            <button\n                onClick={() => {\n                    dispatch(postActions.getPostFB(paging.next));\n                }}>추가로드</button>\n        </React.Fragment>\n    )\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}