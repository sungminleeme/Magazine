{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Text, Input, Button } from \"../elements\";\nimport { useDispatch } from 'react-redux';\nimport { actionCreators as userActions } from '../redux/modules/user';\nimport { emailCheck, passwordCheck } from \"../shared/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [id, setId] = React.useState('');\n  const [pwd, setPwd] = React.useState('');\n  const [pwd_check, setPwdCheck] = React.useState('');\n  const [user_name, setUserName] = React.useState('');\n\n  const signup = () => {\n    if (id === '' || pwd === '' || user_name === '') {\n      window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");\n      return;\n    }\n\n    if (!emailCheck(id)) {\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n\n    if (!passwordCheck(pwd)) {\n      window.alert(\"비밀번호의 형식을 확인해주세요. 영문,숫자,특수문자 필수 포함, 특수문자(!@#$%^&*) 사용가능 8-20자\");\n      return;\n    }\n\n    if (pwd !== pwd_check) {\n      window.alert(\"패스워드와 패스워드 확인이 일치 하지 않습니다!\");\n      return;\n    }\n\n    dispatch(userActions.signupFB(id, pwd, user_name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: \"bold\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uC544\\uC774\\uB514\",\n          placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          type: \"email\",\n          _onChange: e => {\n            setId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uB2C9\\uB124\\uC784\",\n          placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          _onChange: e => {\n            setUserName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          type: \"password\",\n          _onChange: e => {\n            setPwd(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          type: \"password\",\n          _onChange: e => {\n            setPwdCheck(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n        _onClick: signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"KM9aTUwH5l4WqXFlyb/9pFDNGWE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Signup;\nSignup.degaultProps = {};\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community 복사본/src/pages/Signup.js"],"names":["React","Grid","Text","Input","Button","useDispatch","actionCreators","userActions","emailCheck","passwordCheck","Signup","props","dispatch","id","setId","useState","pwd","setPwd","pwd_check","setPwdCheck","user_name","setUserName","signup","window","alert","signupFB","e","target","value","degaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Text, Input, Button} from \"../elements\";\n\nimport {useDispatch} from 'react-redux';\nimport {actionCreators as userActions} from '../redux/modules/user';\nimport { emailCheck, passwordCheck } from \"../shared/common\";\n\nconst Signup = (props) => {\n    const dispatch = useDispatch();\n\n    const [id, setId] = React.useState('');\n    const [pwd, setPwd] = React.useState('');\n    const [pwd_check, setPwdCheck] = React.useState('');\n    const [user_name, setUserName] = React.useState('');\n\n    const signup = () => {\n\n        if (id === '' || pwd === '' || user_name === '') {\n            window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\")\n            return;\n        }\n\n        if (!emailCheck(id)) {\n            window.alert(\"이메일 형식이 맞지 않습니다!\");\n            return;\n        }\n        if (!passwordCheck(pwd)) {\n            window.alert(\"비밀번호의 형식을 확인해주세요. 영문,숫자,특수문자 필수 포함, 특수문자(!@#$%^&*) 사용가능 8-20자\");\n            return;\n        }\n        if (pwd !== pwd_check) {\n            window.alert(\"패스워드와 패스워드 확인이 일치 하지 않습니다!\")\n            return;\n        }\n        \n        dispatch(userActions.signupFB(id, pwd, user_name));\n    };\n    return (\n        <React.Fragment>\n            <Grid padding=\"16px\">\n                <Text size=\"32px\" bold=\"bold\">회원가입</Text>\n                <Grid padding=\"16px 0px\">\n                    <Input\n                        label=\"아이디\"\n                        placeholder=\"아이디를 입력해주세요.\"\n                        type='email'\n                        _onChange={(e) => {\n                            setId(e.target.value);\n                        }}></Input>\n                </Grid>\n                <Grid padding=\"16px 0px\">\n                    <Input\n                        label=\"닉네임\"\n                        placeholder=\"닉네임을 입력해주세요.\"\n                        _onChange={(e) => {\n                            setUserName(e.target.value);\n                        }}></Input>\n                </Grid>\n                <Grid padding=\"16px 0px\">\n                    <Input\n                        label=\"비밀번호\"\n                        placeholder=\"비밀번호를 입력해주세요.\"\n                        type=\"password\"\n                        _onChange={(e) => {\n                            setPwd(e.target.value);\n                        }}></Input>\n                </Grid>\n                <Grid padding=\"16px 0px\">\n                    <Input\n                        label=\"비밀번호 확인\"\n                        placeholder=\"비밀번호를 다시 입력해주세요.\"\n                        type=\"password\"\n                        _onChange={(e) => {\n                            setPwdCheck(e.target.value);\n                        }}></Input>\n                </Grid>\n                <Button text=\"회원가입\" _onClick={signup}></Button>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nSignup.degaultProps = {}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}