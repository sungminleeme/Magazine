{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\"; // import { firestore } from \"../../shared/firebase\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst setPost = createAction(SET_POST, post_list => ({\n  post_list\n}));\nconst addPost = createAction(ADD_POST, post => ({\n  post\n}));\nconst initialState = {\n  list: []\n};\nconst initialPost = {\n  user_info: {\n    user_name: \"mean0\",\n    user_profile: \"https://likerdo-bucket-list.s3.ap-northeast-2.amazonaws.com/yui.jpg\"\n  },\n  image_url: \"https://likerdo-bucket-list.s3.ap-northeast-2.amazonaws.com/yui.jpg\",\n  contents: \"강아지네요!\",\n  comment_cnt: 10,\n  insert_dt: \"2021-02-27 10:00:00\"\n};\n\nconst getPostFB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const postDB = firestore.collection(\"post\");\n    postDB.get().then(docs => {\n      docs.forEach(doc => {\n        console.log(doc.id.doc.data());\n      });\n    });\n  };\n}; // reducer\n// draft 검색하기 \n\n\nexport default handleActions({\n  [SET_POST]: (state, action) => produce(state, draft => {}),\n  [ADD_POST]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/post.js"],"names":["createAction","handleActions","produce","SET_POST","ADD_POST","setPost","post_list","addPost","post","initialState","list","initialPost","user_info","user_name","user_profile","image_url","contents","comment_cnt","insert_dt","getPostFB","dispatch","getState","history","postDB","firestore","collection","get","then","docs","forEach","doc","console","log","id","data","state","action","draft","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,OAAO,GAAGL,YAAY,CAACG,QAAD,EAAYG,SAAD,KAAgB;AAACA,EAAAA;AAAD,CAAhB,CAAX,CAA5B;AACA,MAAMC,OAAO,GAAGP,YAAY,CAACI,QAAD,EAAYI,IAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAX,CAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE,OADJ;AAEPC,IAAAA,YAAY,EAAE;AAFP,GADK;AAIhBC,EAAAA,SAAS,EAAE,qEAJK;AAKhBC,EAAAA,QAAQ,EAAE,QALM;AAMhBC,EAAAA,WAAW,EAAE,EANG;AAOhBC,EAAAA,SAAS,EAAE;AAPK,CAApB;;AAUA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EAAwC;AAC3C,UAAMC,MAAM,GAAGC,SAAS,CAACC,UAAV,CAAqB,MAArB,CAAf;AAEAF,IAAAA,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAmBC,IAAD,IAAU;AACxBA,MAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAAQ;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAJ,CAAOH,GAAP,CAAWI,IAAX,EAAZ;AACH,OAFD;AAGH,KAJD;AAKH,GARD;AASH,CAVD,C,CAYA;AACA;;;AACA,eAAejC,aAAa,CACxB;AACI,GAACE,QAAD,GAAY,CAACgC,KAAD,EAAQC,MAAR,KAAmBlC,OAAO,CAACiC,KAAD,EAASE,KAAD,IAAW,CAExD,CAFqC,CAD1C;AAKI,GAACjC,QAAD,GAAY,CAAC+B,KAAD,EAAQC,MAAR,KAAmBlC,OAAO,CAACiC,KAAD,EAASE,KAAD,IAAW,CAExD,CAFqC;AAL1C,CADwB,EAUxB5B,YAVwB,CAA5B,C,CAaE;;AACF,MAAM6B,cAAc,GAAG;AACnBjC,EAAAA,OADmB;AAEnBE,EAAAA,OAFmB;AAGnBY,EAAAA;AAHmB,CAAvB;AAME,SAASmB,cAAT","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n// import { firestore } from \"../../shared/firebase\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\n\nconst setPost = createAction(SET_POST, (post_list) => ({post_list}));\nconst addPost = createAction(ADD_POST, (post) => ({post}));\n\nconst initialState = {\n    list: [],\n}\n\nconst initialPost = {\n    user_info: {\n        user_name: \"mean0\",\n        user_profile: \"https://likerdo-bucket-list.s3.ap-northeast-2.amazonaws.com/yui.jpg\"},\n    image_url: \"https://likerdo-bucket-list.s3.ap-northeast-2.amazonaws.com/yui.jpg\",\n    contents: \"강아지네요!\",\n    comment_cnt: 10,\n    insert_dt: \"2021-02-27 10:00:00\"\n}\n\nconst getPostFB = () => {\n    return function (dispatch, getState, {history}){\n        const postDB = firestore.collection(\"post\");\n\n        postDB.get().then((docs) => {\n            docs.forEach((doc) =>{\n                console.log(doc.id.doc.data());\n            })\n        })\n    }\n}\n\n// reducer\n// draft 검색하기 \nexport default handleActions(\n    {\n        [SET_POST]: (state, action) => produce(state, (draft) => {\n          \n        }),\n  \n        [ADD_POST]: (state, action) => produce(state, (draft) => {\n            \n        })\n    },\n    initialState\n  );\n\n  // action creator export\nconst actionCreators = {\n    setPost,\n    addPost,\n    getPostFB,\n  };\n  \n  export { actionCreators };"]},"metadata":{},"sourceType":"module"}