{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/Magazine/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_login = useSelector(state => state.user.is_login);\n  const preview = useSelector(state => state.image.preview);\n  const post_list = useSelector(state => state.post.list);\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n  const {\n    history\n  } = props;\n\n  let _post = is_edit ? post_list.find(p => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n  const [layout_type, setLayoutType] = React.useState(_post ? _post.layout_type : \"\");\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      window.alert(\"포스트!\");\n      history.goBack();\n      return;\n    }\n\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n    }\n  }, []);\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  };\n\n  const changeLayoutType = e => {\n    setLayoutType(e.target.value);\n  };\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents, layout_type));\n  };\n\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, {\n      contents: contents\n    }));\n  };\n\n  if (!is_login) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      margin: \"100px 0px\",\n      padding: \"16px\",\n      center: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: \"bold\",\n        children: \"\\uC557! \\uC7A0\\uAE50!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        _onClick: () => {\n          history.replace(\"/\");\n        },\n        children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        size: \"36px\",\n        bold: \"bold\",\n        children: is_edit ? \"게시글 수정\" : \"게시글 작성\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          margin: \"0px\",\n          size: \"24px\",\n          bold: \"bold\",\n          children: \"\\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        shape: \"rectangle\",\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        class: \"form-select\",\n        \"aria-label\": \"Default select example\",\n        _onChange: changeLayoutType,\n        label: \"\\uB808\\uC774\\uC544\\uC6C3 \\uD0C0\\uC785\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          children: \"\\uB808\\uC774\\uC544\\uC6C3\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: layout_type,\n          children: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: layout_type,\n          children: \"b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: layout_type,\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: contents,\n        _onChange: changeContents,\n        label: \"\\uAC8C\\uC2DC\\uAE00 \\uB0B4\\uC6A9\",\n        placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        multiLine: \"multiLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: is_edit ? /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\",\n        _onClick: editPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        _onClick: addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PostWrite, \"EUpNZWo1zAQMMpk5UMPvpeztfq4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostWrite;\nexport default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/Magazine/src/pages/PostWrite.js"],"names":["React","Grid","Text","Button","Image","Input","Upload","useSelector","useDispatch","actionCreators","postActions","imageActions","PostWrite","props","dispatch","is_login","state","user","preview","image","post_list","post","list","post_id","match","params","id","is_edit","history","_post","find","p","contents","setContents","useState","layout_type","setLayoutType","useEffect","console","log","window","alert","goBack","setPreview","image_url","changeContents","e","target","value","changeLayoutType","addPost","addPostFB","editPost","editPostFB","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Grid, Text, Button, Image, Input} from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\";\n\nconst PostWrite = (props) => {\n    const dispatch = useDispatch();\n    const is_login = useSelector((state) => state.user.is_login);\n    const preview = useSelector((state) => state.image.preview);\n    const post_list = useSelector((state) => state.post.list);\n\n    const post_id = props.match.params.id;\n    const is_edit = post_id\n        ? true\n        : false;\n\n    const {history} = props;\n\n    let _post = is_edit\n        ? post_list.find((p) => p.id === post_id)\n        : null;\n\n    const [contents, setContents] = React.useState(\n        _post\n            ? _post.contents\n            : \"\"\n    );\n\n    const [layout_type, setLayoutType] = React.useState(\n        _post\n            ? _post.layout_type\n            : \"\"\n    );\n\n    React.useEffect(() => {\n        if (is_edit && !_post) {\n            console.log(\"포스트 정보가 없어요!\");\n            window.alert(\"포스트!\");\n            history.goBack();\n\n            return;\n        }\n\n        if (is_edit) {\n            dispatch(imageActions.setPreview(_post.image_url));\n        }\n    }, []);\n\n    const changeContents = (e) => {\n        setContents(e.target.value);\n    };\n    const changeLayoutType = (e) => {\n        setLayoutType(e.target.value);\n    };\n\n    const addPost = () => {\n        dispatch(postActions.addPostFB(contents, layout_type));\n    };\n\n    const editPost = () => {\n        dispatch(postActions.editPostFB(post_id, {contents: contents}));\n    }\n\n    if (!is_login) {\n        return (\n            <Grid margin=\"100px 0px\" padding=\"16px\" center=\"center\">\n                <Text size=\"32px\" bold=\"bold\">\n                    앗! 잠깐!\n                </Text>\n                <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n                <Button\n                    _onClick={() => {\n                        history.replace(\"/\");\n                    }}>\n                    로그인 하러가기\n                </Button>\n            </Grid>\n        );\n    }\n\n    return (<React.Fragment>\n        <Grid padding=\"16px\">\n            <Text margin=\"0px\" size=\"36px\" bold=\"bold\">\n                {\n                    is_edit\n                        ? \"게시글 수정\"\n                        : \"게시글 작성\"\n                }\n            </Text>\n            <Upload/>\n        </Grid>\n\n        <Grid>\n            <Grid padding=\"16px\">\n                <Text margin=\"0px\" size=\"24px\" bold=\"bold\">\n                    미리보기\n                </Text>\n            </Grid>\n\n            <Image\n                shape=\"rectangle\"\n                src={preview\n                    ? preview\n                    : \"http://via.placeholder.com/400x300\"}/>\n        </Grid>\n\n        <Grid padding=\"16px\">\n            <select class=\"form-select\" aria-label=\"Default select example\" \n                    \n                    _onChange={changeLayoutType}\n                    label=\"레이아웃 타입\" >\n                <option selected=\"selected\">레이아웃을 선택해주세요</option>\n                <option value={layout_type}>a</option>\n                <option value={layout_type}>b</option>\n                <option value={layout_type}>c</option>\n                {/* <Input\n                    type=\"text\"\n                    value={layout_type}\n                    _onChange={changeLayoutType}\n                    label=\"레이아웃 타입\"\n                    placeholder=\"a, b, c 중 하나를 골라주세요.\"/> */}\n                    </select>\n            </Grid>\n\n            <Grid padding=\"16px\">\n\n                <Input\n                    value={contents}\n                    _onChange={changeContents}\n                    label=\"게시글 내용\"\n                    placeholder=\"게시글 작성\"\n                    multiLine=\"multiLine\"/>\n            </Grid>\n\n            <Grid padding=\"16px\">\n                {\n                    is_edit\n                        ? (<Button text=\"게시글 수정\" _onClick={editPost}></Button>)\n                        : (<Button text=\"게시글 작성\" _onClick={addPost}></Button>)\n                }\n            </Grid>\n        </React.Fragment>\n        );\n};\n\nexport default PostWrite;"]},"metadata":{},"sourceType":"module"}