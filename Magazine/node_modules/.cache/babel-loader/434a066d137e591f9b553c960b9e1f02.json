{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\"; // actions\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // actions creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'sungmin'\n}; //middleware actions\n\nconst loginFB = (id, pwd) => {\n  // history 페이지 이동 할 때 사용\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(res => {\n      auth.signInWithEmailAndPassword(id, pwd).then(userCredential => {\n        console.log(userCredential);\n        const user = userCredential.user; // Signed in ...\n\n        dispatch(setUser({\n          user_name: user.displayName,\n          id: id,\n          user_profile: '',\n          uid: user.uid\n        }));\n        history.push(\"/\");\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(userCredential => {\n      // Signed in\n      const user = userCredential.user; // ...\n\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: '',\n          udi: user.uid\n        }));\n        history.push('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  };\n};\n\nconst loginCheckFB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        dispatch(setUser({\n          user_name: user.displayName,\n          user_profile: \"\",\n          id: user.email,\n          uid: user.uid\n        }));\n      } else {\n        dispatch(logOut());\n      }\n    });\n  };\n};\n\nconst logoutFB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace('/');\n    });\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB\n};\nexport { actionCreators }; // const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community 복사본/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","firebase","LOG_IN","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginFB","id","pwd","dispatch","getState","history","setPersistence","Auth","Persistence","SESSION","then","res","signInWithEmailAndPassword","userCredential","console","log","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","signupFB","createUserWithEmailAndPassword","currentUser","updateProfile","udi","loginCheckFB","onAuthStateChanged","email","logoutFB","signOut","replace","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {produce} from \"immer\";\n\nimport {setCookie, getCookie, deleteCookie} from \"../../shared/Cookie\";\n\nimport {auth} from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n// actions\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// actions creators\nconst logOut = createAction(LOG_OUT, (user) => ({user}));\nconst getUser = createAction(GET_USER, (user) => ({user}));\nconst setUser = createAction(SET_USER, (user) => ({user}))\n\n// initialState\nconst initialState = {\n    user: null,\n    is_login: false\n};\n\nconst user_initial = {\n    user_name: 'sungmin'\n};\n\n//middleware actions\nconst loginFB = (id, pwd) => {\n    // history 페이지 이동 할 때 사용\n    return function (dispatch, getState, {history}) {\n\n        auth\n            .setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then((res) => {\n                auth\n                    .signInWithEmailAndPassword(id, pwd)\n                    .then((userCredential) => {\n                        console.log(userCredential);\n                        const user = userCredential.user;\n                        // Signed in ...\n                        dispatch(\n                            setUser({user_name: user.displayName, id: id, user_profile: '', uid: user.uid})\n                        );\n                        history.push(\"/\");\n                    })\n                    .catch((error) => {\n                        const errorCode = error.code;\n                        const errorMessage = error.message;\n\n                        console.log(errorCode, errorMessage);\n                    });\n            });\n\n    }\n}\n\nconst signupFB = (id, pwd, user_name) => {\n    return function (dispatch, getState, {history}) {\n\n        auth\n            .createUserWithEmailAndPassword(id, pwd)\n            .then((userCredential) => {\n\n                // Signed in\n                const user = userCredential.user;\n                // ...\n                console.log(user);\n\n                auth\n                    .currentUser\n                    .updateProfile({displayName: user_name})\n                    .then(() => {\n                        dispatch(\n                            setUser({user_name: user_name, id: id, user_profile: '', udi: user.uid})\n                        );\n                        history.push('/');\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n            });\n    };\n};\n\nconst loginCheckFB = () => {\n    return function (dispatch, getState, {history}) {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                dispatch(\n                    setUser({user_name: user.displayName, user_profile: \"\", id: user.email, uid: user.uid})\n                );\n            } else {\n                dispatch(logOut());\n            }\n        });\n    };\n};\n\nconst logoutFB = () => {\n    return function (dispatch, getState, {history}) {\n        auth.signOut().then(() => {\n            dispatch(logOut());\n            history.replace('/');\n        });\n\n    };\n};\n\n//reducer\nexport default handleActions({\n    [SET_USER]: (state, action) => produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n    }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n    }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {})\n}, initialState);\n\n// action creator export\nconst actionCreators = {\n    logOut,\n    getUser,\n    signupFB,\n    loginFB,\n    loginCheckFB,\n    logoutFB,\n};\n\nexport {\n    actionCreators\n};\n\n// const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});"]},"metadata":{},"sourceType":"module"}