{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\"; // actions\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // actions creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'sungmin'\n}; //middleware actions\n\nconst loginFB = (id, pwd) => {\n  // history 페이지 이동 할 때 사용\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.signInWithEmailAndPassword(id, pwd).then(userCredential => {\n      console.log(userCredential);\n      const user = userCredential.user; // Signed in ...\n\n      dispatch(setUser({\n        user_name: user.displayName,\n        id: id,\n        user_profile: ''\n      }));\n      history.push(\"/\");\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(userCredential => {\n      // Signed in\n      const user = userCredential.user; // ...\n\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: ''\n        }));\n        history.push('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB\n};\nexport { actionCreators }; // const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","LOG_IN","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginFB","id","pwd","dispatch","getState","history","signInWithEmailAndPassword","then","userCredential","console","log","displayName","user_profile","push","catch","error","errorCode","code","errorMessage","message","signupFB","createUserWithEmailAndPassword","currentUser","updateProfile","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {produce} from \"immer\";\n\nimport {setCookie, getCookie, deleteCookie} from \"../../shared/Cookie\";\n\nimport {auth} from \"../../shared/firebase\";\n\n// actions\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// actions creators\nconst logOut = createAction(LOG_OUT, (user) => ({user}));\nconst getUser = createAction(GET_USER, (user) => ({user}));\nconst setUser = createAction(SET_USER, (user) => ({user}))\n\n// initialState\nconst initialState = {\n    user: null,\n    is_login: false\n};\n\nconst user_initial = {\n    user_name: 'sungmin'\n};\n\n//middleware actions\nconst loginFB = (id, pwd) => {\n    // history 페이지 이동 할 때 사용\n    return function (dispatch, getState, {history}) {\n        auth\n            .signInWithEmailAndPassword(id, pwd)\n            .then((userCredential) => {\n                console.log(userCredential);\n                const user = userCredential.user;\n                // Signed in ...\n                dispatch(setUser({user_name: user.displayName, id: id, user_profile: ''})\n                );\n                history.push(\"/\");\n            })\n            \n        \n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n            });\n    }\n}\n\nconst signupFB = (id, pwd, user_name) => {\n    return function (dispatch, getState, {history}) {\n\n        auth\n            .createUserWithEmailAndPassword(id, pwd)\n            .then((userCredential) => {\n\n                // Signed in\n                const user = userCredential.user;\n                // ...\n                console.log(user);\n\n                auth\n                    .currentUser\n                    .updateProfile({displayName: user_name})\n                    .then(() => {\n                        dispatch(setUser({user_name: user_name, id: id, user_profile: ''}));\n                        history.push('/');\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n            });\n    };\n};\n\n//reducer\nexport default handleActions({\n    [SET_USER]: (state, action) => produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n    }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n    }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {})\n}, initialState);\n\n// action creator export\nconst actionCreators = {\n    logOut,\n    getUser,\n    signupFB,\n    loginFB\n};\n\nexport {\n    actionCreators\n};\n\n// const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});"]},"metadata":{},"sourceType":"module"}