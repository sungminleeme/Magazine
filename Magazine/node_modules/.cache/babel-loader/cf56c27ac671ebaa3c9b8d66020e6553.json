{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as postActions } from '../redux/modules/post'; //이 페이지에서 새로고침하면 리덕스 데이터가 날아가서 콘솔에 안찍힘!!!!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n  const user_info = useSelector(state => state.user.user);\n  const post_list = useSelector(store => store.post.list);\n  const post_idx = post_list.findIndex(p => p.id === id);\n  const post = post_list[post_idx];\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [post && /*#__PURE__*/_jsxDEV(Post, { ...post,\n      is_me: post.user_info.user_id === user_info.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(CommentWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"lB3dOQtTn+q0oQRlxg50JtbqMVk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostDetail.js"],"names":["React","Post","CommentList","CommentWrite","useDispatch","useSelector","actionCreators","postActions","PostDetail","props","dispatch","id","match","params","user_info","state","user","post_list","store","post","list","post_idx","findIndex","p","useEffect","getOnePostFB","user_id","uid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AAEA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C,C,CACA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7B;AAEA,QAAMC,SAAS,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA7B;AAEA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAAQA,EAAjC,CAAjB;AACA,QAAMQ,IAAI,GAAGF,SAAS,CAACI,QAAD,CAAtB;AAGArB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AAGlB,QAAGL,IAAH,EAAQ;AACJ;AACH;;AAEDT,IAAAA,QAAQ,CAACH,WAAW,CAACkB,YAAZ,CAAyBd,EAAzB,CAAD,CAAR;AAEH,GATD,EASG,EATH;AAWA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACKQ,IAAI,iBAAK,QAAC,IAAD,OAAUA,IAAV;AAAgB,MAAA,KAAK,EAAEA,IAAI,CAACL,SAAL,CAAeY,OAAf,KAA2BZ,SAAS,CAACa;AAA5D;AAAA;AAAA;AAAA;AAAA,YADd,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA/BD;;GAAMnB,U;UACeJ,W,EAGCC,W,EAEAA,W;;;KANhBG,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nimport {useDispatch,useSelector} from \"react-redux\";\n\nimport { actionCreators as postActions } from '../redux/modules/post';\n//이 페이지에서 새로고침하면 리덕스 데이터가 날아가서 콘솔에 안찍힘!!!!\nconst PostDetail = (props) => {\n    const dispatch = useDispatch();\n    const id = props.match.params.id;\n\n    const user_info = useSelector((state) => state.user.user);\n\n    const post_list = useSelector(store => store.post.list);\n\n    const post_idx = post_list.findIndex(p => p.id ===id);\n    const post = post_list[post_idx];\n\n\n    React.useEffect(() => {\n\n\n        if(post){\n            return;\n        }\n        \n        dispatch(postActions.getOnePostFB(id))\n\n    }, []);\n\n    return (\n        <React.Fragment>\n            {post && (<Post {...post} is_me={post.user_info.user_id === user_info.uid}/>\n            )}\n            <CommentWrite/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}