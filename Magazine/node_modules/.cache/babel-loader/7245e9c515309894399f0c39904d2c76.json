{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Text, Input, Button, Image } from '../elements';\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from '../redux/modules/post';\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_login = useSelector(state => state.user.is_login);\n  const preview = useSelector(state => state.image.preview);\n  const post_list = useSelector(state => state.post.list);\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n  const {\n    history\n  } = props;\n\n  let _post = is_edit ? post_list.find(p => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      history.goBack();\n      return;\n    }\n  }, []);\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  };\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents));\n  };\n\n  if (!is_login) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      margin: \"100px 0px\",\n      padding: \"16px\",\n      center: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: \"bold\",\n        children: \"\\uC557! \\uC7A0\\uAE50!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        _onClick: () => {\n          history.replace(\"/\");\n        },\n        children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        size: \"36px\",\n        bold: \"bold\",\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          margin: \"0px\",\n          size: \"24px\",\n          bold: \"bold\",\n          children: \"\\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        shape: \"rectangle\",\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: contents,\n        _onChange: changeContents,\n        label: \"\\uAC8C\\uC2DC\\uAE00\\uB0B4\\uC6A9\",\n        placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        multiLine: \"multiLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        _onClick: addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostWrite, \"CYGdTT/vkkqrDd9IRztLpD/xWDk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostWrite;\nexport default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostWrite.js"],"names":["React","Grid","Text","Input","Button","Image","Upload","useSelector","useDispatch","actionCreators","postActions","imageActions","PostWrite","props","dispatch","is_login","state","user","preview","image","post_list","post","list","post_id","match","params","id","is_edit","history","_post","find","p","contents","setContents","useState","useEffect","console","log","goBack","changeContents","e","target","value","addPost","addPostFB","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Text, Input, Button, Image} from '../elements';\nimport Upload from \"../shared/Upload\";\n\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {actionCreators as postActions} from '../redux/modules/post';\nimport {actionCreators as imageActions} from \"../redux/modules/image\"\nconst PostWrite = (props) => {\n    const dispatch = useDispatch();\n    const is_login = useSelector((state) => state.user.is_login);\n    const preview = useSelector((state) => state.image.preview);\n    const post_list = useSelector((state) => state.post.list);\n    \n    \n    const post_id = props.match.params.id;\n    const is_edit = post_id ? true : false;\n    \n    const {history} = props;\n\n    let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n    const [contents, setContents] = React.useState(_post? _post.contents : \"\");\n\n    React.useEffect(() => {\n        if (is_edit && !_post) {\n            console.log(\"포스트 정보가 없어요!\");\n      history.goBack();\n\n      return;\n        }\n    }, [])    ;\n\n\n    const changeContents = (e) => {\n        setContents(e.target.value);\n    }\n\n    const addPost = () => {\n        dispatch(postActions.addPostFB(contents));\n    }\n\n    if (!is_login) {\n        return (\n            <Grid margin=\"100px 0px\" padding=\"16px\" center=\"center\">\n                <Text size=\"32px\" bold=\"bold\">앗! 잠깐!</Text>\n                <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n                <Button\n                    _onClick={() => {\n                        history.replace(\"/\")\n                    }}>로그인 하러가기</Button>\n            </Grid>\n        )\n    };\n\n    return (\n        <React.Fragment>\n            <Grid padding=\"16px\">\n                <Text margin=\"0px\" size=\"36px\" bold=\"bold\">\n                    게시글 작성\n                </Text>\n                <Upload/>\n            </Grid>\n            <Grid>\n                <Grid padding=\"16px\">\n                    <Text margin=\"0px\" size=\"24px\" bold=\"bold\">미리보기</Text>\n                </Grid>\n                <Image\n                    shape=\"rectangle\"\n                    src={preview\n                        ? preview\n                        : \"http://via.placeholder.com/400x300\"}/>\n            </Grid>\n            <Grid padding=\"16px\">\n                <Input\n                value={contents}\n                    _onChange={changeContents}\n                    label=\"게시글내용\"\n                    placeholder=\"게시글 작성\"\n                    multiLine=\"multiLine\"/>\n            </Grid>\n            <Grid padding=\"16px\">\n                <Button text=\"게시글 작성\" _onClick={addPost}></Button>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default PostWrite;"]},"metadata":{},"sourceType":"module"}