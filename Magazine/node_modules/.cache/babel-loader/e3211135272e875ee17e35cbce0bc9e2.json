{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/shared/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../elements\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const uploading = useSelector(state => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = e => {\n    // e.target은 input이죠!\n    // input이 가진 files 객체를 살펴봅시다.\n    console.log(e.target.files); // 선택한 파일이 어떻게 저장되어 있나 봅시다.\n\n    console.log(e.target.files[0]); // ref로도 확인해봅시다. :)\n\n    console.log(fileInput.current.files[0]);\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      console.log(reader.result);\n    };\n  };\n\n  const uploadFB = () => {\n    if (!fileInput.current || fileInput.current.files.length === 0) {\n      window.alert(\"파일을 선택해주세요!\");\n      return;\n    }\n\n    dispatch(imageActions.uploadImageFB(fileInput.current.files[0]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInput,\n      onChange: selectFile,\n      disabled: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      _onClick: uploadFB,\n      children: \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Upload, \"MOWWCPLHw+9WsXdUSqsC9RDX+HU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Upload.js"],"names":["React","useDispatch","useSelector","Button","actionCreators","imageActions","Upload","props","dispatch","uploading","state","image","fileInput","useRef","selectFile","e","console","log","target","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","uploadFB","length","window","alert","uploadImageFB"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,cAAc,IAAIC,YAA3B,QAA+C,wBAA/C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,SAAxB,CAA7B;AACA,QAAMG,SAAS,GAAGZ,KAAK,CAACa,MAAN,EAAlB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxB;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB,EAHwB,CAIxB;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ,EALwB,CAOxB;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AAEA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAGR,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AAEAE,IAAAA,MAAM,CAACG,aAAP,CAAqBD,IAArB;;AAEAF,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvBT,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACK,MAAnB;AACD,KAFD;AAGD,GAlBD;;AAoBA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAI,CAACf,SAAS,CAACQ,OAAX,IAAsBR,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwBS,MAAxB,KAAmC,CAA7D,EAAgE;AAC9DC,MAAAA,MAAM,CAACC,KAAP,CAAa,aAAb;AACA;AACD;;AAEDtB,IAAAA,QAAQ,CAACH,YAAY,CAAC0B,aAAb,CAA2BnB,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAA3B,CAAD,CAAR;AACD,GAPD;;AASA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,GAAG,EAAEP,SAFP;AAGE,MAAA,QAAQ,EAAEE,UAHZ;AAIE,MAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEkB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7CD;;GAAMrB,M;UACaL,W,EACCC,W;;;KAFdI,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../elements\";\n\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n  const dispatch = useDispatch();\n  const uploading = useSelector((state) => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = (e) => {\n    // e.target은 input이죠!\n    // input이 가진 files 객체를 살펴봅시다.\n    console.log(e.target.files);\n    // 선택한 파일이 어떻게 저장되어 있나 봅시다.\n    console.log(e.target.files[0]);\n\n    // ref로도 확인해봅시다. :)\n    console.log(fileInput.current.files[0]);\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      console.log(reader.result);\n    }\n  };\n\n  const uploadFB = () => {\n    if (!fileInput.current || fileInput.current.files.length === 0) {\n      window.alert(\"파일을 선택해주세요!\");\n      return;\n    }\n\n    dispatch(imageActions.uploadImageFB(fileInput.current.files[0]));\n  };\n\n  return (\n    <React.Fragment>\n      <input\n        type=\"file\"\n        ref={fileInput}\n        onChange={selectFile}\n        disabled={uploading}\n      />\n      <Button _onClick={uploadFB}>업로드하기</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}