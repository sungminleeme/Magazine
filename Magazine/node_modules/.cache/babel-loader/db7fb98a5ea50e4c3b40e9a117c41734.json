{"ast":null,"code":"// import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { createBrowserHistory } from \"history\";\n// import { connectRouter } from \"connected-react-router\";\n// import User from \"./modules/user\";\n// export const history = createBrowserHistory();\n// const rootReducer = combineReducers({\n//     user: User,\n//     router: connectRouter(history),\n//   });\n//   //여기에 thunk말고 사용하고 싶은 것을 넣는 곳!\n//   const middlewares = [thunk.withExtraArgument({history:history})];\n// // 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\n// const env = process.env.NODE_ENV;\n// // 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\n// if (env === \"development\") {\n//   const { logger } = require(\"redux-logger\");\n//   middlewares.push(logger);\n// }\n// const composeEnhancers =\n//   typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//         // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n//       })\n//     : compose;\n//     const enhancer = composeEnhancers(\n//         applyMiddleware(...middlewares)\n//       );\n//       let store = (initialStore) => createStore(rootReducer, enhancer);\n// export default store();","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community/src/redux/configureStore.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { createBrowserHistory } from \"history\";\n// import { connectRouter } from \"connected-react-router\";\n\n// import User from \"./modules/user\";\n\n// export const history = createBrowserHistory();\n\n// const rootReducer = combineReducers({\n//     user: User,\n//     router: connectRouter(history),\n//   });\n\n//   //여기에 thunk말고 사용하고 싶은 것을 넣는 곳!\n//   const middlewares = [thunk.withExtraArgument({history:history})];\n\n// // 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\n// const env = process.env.NODE_ENV;\n\n// // 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\n// if (env === \"development\") {\n//   const { logger } = require(\"redux-logger\");\n//   middlewares.push(logger);\n// }\n\n// const composeEnhancers =\n//   typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n//         // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n//       })\n//     : compose;\n\n//     const enhancer = composeEnhancers(\n//         applyMiddleware(...middlewares)\n//       );\n\n//       let store = (initialStore) => createStore(rootReducer, enhancer);\n\n// export default store();"]},"metadata":{},"sourceType":"module"}