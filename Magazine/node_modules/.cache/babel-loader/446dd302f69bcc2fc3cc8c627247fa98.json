{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\nimport { useSelector } from \"react-redux\";\nimport { firestore } from \"../shared/firebase\"; //이 페이지에서 새로고침하면 리덕스 데이터가 날아가서 콘솔에 안찍힘!!!!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const id = props.match.params.id;\n  const user_info = useSelector(state => state.user.user);\n  const post_list = useSelector(store => store.post.list);\n  const post_idx = post_list.findIndex(p => p.id === id);\n  const post = post_list[post_idx];\n  React.useEffect(() => {\n    const postDB = firestore.collection(\"post\");\n    postDB.doc(id).get().then(doc => {\n      console.log(doc);\n      console.log(doc.data());\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CommentWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"8kGGbLKC6QiqTEQ7x5S++hVHTMc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostDetail.js"],"names":["React","Post","CommentList","CommentWrite","useSelector","firestore","PostDetail","props","id","match","params","user_info","state","user","post_list","store","post","list","post_idx","findIndex","p","useEffect","postDB","collection","doc","get","then","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,SAAR,QAAwB,oBAAxB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA7B;AAEA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAAQA,EAAjC,CAAjB;AACA,QAAMQ,IAAI,GAAGF,SAAS,CAACI,QAAD,CAAtB;AAEAlB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClB,UAAMC,MAAM,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,MAArB,CAAf;AACAD,IAAAA,MAAM,CAACE,GAAP,CAAWhB,EAAX,EAAeiB,GAAf,GAAqBC,IAArB,CAA0BF,GAAG,IAAI;AAC7BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,EAAZ;AACH,KAHD;AAKH,GAPD,EAOG,EAPH;AASA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMvB,U;UAIgBF,W,EACAA,W;;;KALhBE,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nimport {useSelector} from \"react-redux\";\n\nimport {firestore} from \"../shared/firebase\";\n\n//이 페이지에서 새로고침하면 리덕스 데이터가 날아가서 콘솔에 안찍힘!!!!\nconst PostDetail = (props) => {\n\n    const id = props.match.params.id;\n\n    const user_info = useSelector((state) => state.user.user);\n    const post_list = useSelector(store => store.post.list);\n\n    const post_idx = post_list.findIndex(p => p.id ===id);\n    const post = post_list[post_idx];\n\n    React.useEffect(() => {\n        const postDB = firestore.collection(\"post\");\n        postDB.doc(id).get().then(doc => {\n            console.log(doc);\n            console.log(doc.data());\n        })\n\n    }, []);\n\n    return (\n        <React.Fragment>\n            {/* <Post {...post} is_me={post.user_info.user_id === user_info.uid}/> */}\n            <CommentWrite/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}