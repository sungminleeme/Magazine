{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/shared/InfinityScroll.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport _ from \"loadsh\";\nimport { Spinner } from \"../elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityScroll = props => {\n  _s();\n\n  const {\n    children,\n    callNext,\n    is_next,\n    loading\n  } = props;\n\n  const _handleScroll = _.throttle(() => {\n    if (loading) {\n      return;\n    }\n\n    const {\n      innerHeight\n    } = window;\n    const {\n      scrollHeight\n    } = document.body;\n    const scrollTop = document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 200) {\n      callNext();\n    }\n  }, 300);\n\n  const handleScroll = React.useCallback(_handleScroll, [loading]);\n  React.useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    if (is_next) {\n      window.addEventListener(\"scroll\", handleScroll);\n    } else {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [is_next, loading]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [props.children, is_next && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfinityScroll, \"8BseBLutViIVp8ya6fspMHeE7wM=\");\n\n_c = InfinityScroll;\nInfinityScroll.defaultProps = {\n  children: null,\n  callNext: () => {},\n  is_next: false,\n  loading: false\n};\nexport default InfinityScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityScroll\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/InfinityScroll.js"],"names":["React","_","Spinner","InfinityScroll","props","children","callNext","is_next","loading","_handleScroll","throttle","innerHeight","window","scrollHeight","document","body","scrollTop","documentElement","handleScroll","useCallback","useEffect","addEventListener","removeEventListener","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA2CJ,KAAjD;;AAEA,QAAMK,aAAa,GAAGR,CAAC,CAACS,QAAF,CAAW,MAAM;AAGnC,QAAGF,OAAH,EAAW;AACP;AACH;;AAED,UAAM;AAACG,MAAAA;AAAD,QAAgBC,MAAtB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAiBC,QAAQ,CAACC,IAAhC;AAEA,UAAMC,SAAS,GACdF,QAAQ,CAACG,eAAT,IAA4BH,QAAQ,CAACG,eAAT,CAAyBD,SAAtD,IACAF,QAAQ,CAACC,IAAT,CAAcC,SAFd;;AAIA,QAAGH,YAAY,GAAGF,WAAf,GAA6BK,SAA7B,GAAyC,GAA5C,EAAgD;AAC5CV,MAAAA,QAAQ;AACX;AAEJ,GAlBqB,EAkBnB,GAlBmB,CAAtB;;AAoBA,QAAMY,YAAY,GAAGlB,KAAK,CAACmB,WAAN,CAAkBV,aAAlB,EAAiC,CAACD,OAAD,CAAjC,CAArB;AAEAR,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AAElB,QAAGZ,OAAH,EAAY;AACR;AACH;;AAED,QAAGD,OAAH,EAAW;AACPK,MAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAiCH,YAAjC;AACH,KAFD,MAEK;AACDN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAoCJ,YAApC;AACH;;AAID,WAAO,MAAMN,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAoCJ,YAApC,CAAb;AACH,GAfD,EAeG,CAACX,OAAD,EAAUC,OAAV,CAfH;AAiBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACKJ,KAAK,CAACC,QADX,EAEKE,OAAO,iBAAK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjDD;;GAAMJ,c;;KAAAA,c;AAmDNA,cAAc,CAACoB,YAAf,GAA8B;AAC1BlB,EAAAA,QAAQ,EAAE,IADgB;AAE1BC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFQ;AAG1BC,EAAAA,OAAO,EAAC,KAHkB;AAI1BC,EAAAA,OAAO,EAAE;AAJiB,CAA9B;AASA,eAAeL,cAAf","sourcesContent":["import React from \"react\";\nimport _ from \"loadsh\";\nimport {Spinner} from \"../elements\";\n\nconst InfinityScroll = (props) => {\n    \n    const { children, callNext, is_next, loading } = props;\n\n    const _handleScroll = _.throttle(() => {\n\n\n        if(loading){\n            return;\n        }\n\n        const {innerHeight} = window;\n        const {scrollHeight} = document.body;\n\n        const scrollTop = \n        (document.documentElement && document.documentElement.scrollTop) || \n        document.body.scrollTop;\n\n        if(scrollHeight - innerHeight - scrollTop < 200){\n            callNext();\n        }\n        \n    }, 300);\n\n    const handleScroll = React.useCallback(_handleScroll, [loading]);\n\n    React.useEffect(() => {\n\n        if(loading) {\n            return;\n        }\n\n        if(is_next){\n            window.addEventListener(\"scroll\",handleScroll);\n        }else{\n            window.removeEventListener(\"scroll\",handleScroll);\n        }\n\n        \n\n        return () => window.removeEventListener(\"scroll\",handleScroll);\n    }, [is_next, loading]);\n\n    return(\n        <React.Fragment>\n            {props.children}\n            {is_next && (<Spinner/>)}\n        </React.Fragment>\n    )\n}\n\nInfinityScroll.defaultProps = {\n    children: null,\n    callNext: () => {},\n    is_next:false,\n    loading: false,\n\n}\n\n\nexport default InfinityScroll;"]},"metadata":{},"sourceType":"module"}