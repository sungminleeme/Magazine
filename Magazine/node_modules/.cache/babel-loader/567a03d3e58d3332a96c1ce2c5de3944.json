{"ast":null,"code":"var _jsxFileName = \"/Users/a111/Desktop/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165 2/image-community /src/shared/Permit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Permit = props => {\n  _s();\n\n  const is_login = useSelector(state => state.user.is_login);\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  if (is_session && is_login) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this);\n  }\n\n  return null;\n};\n\n_s(Permit, \"2VexXuUgB8o5Iyem/5fW9LFG6ys=\", false, function () {\n  return [useSelector];\n});\n\n_c = Permit;\nexport default Permit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Permit\");","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Permit.js"],"names":["React","useSelector","apiKey","Permit","props","is_login","state","user","_session_key","is_session","sessionStorage","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,MAAR,QAAqB,YAArB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AAAA;;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACA,QAAMG,YAAY,GAAI,qBAAoBN,MAAO,YAAjD;AAEA,QAAMO,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,IAAsC,IAAtC,GAA6C,KAAhE;;AACA,MAAGC,UAAU,IAAIJ,QAAjB,EAA2B;AAC3B,wBAAM,QAAC,KAAD,CAAO,QAAP;AAAA,gBACDD,KAAK,CAACQ;AADL;AAAA;AAAA;AAAA;AAAA,YAAN;AAGC;;AAED,SAAO,IAAP;AACH,CAZD;;GAAMT,M;UACeF,W;;;KADfE,M;AAcN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {apiKey} from \"./firebase\";\n\nconst Permit = (props) =>{\n    const is_login = useSelector(state => state.user.is_login);\n    const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n \n    const is_session = sessionStorage.getItem(_session_key)? true : false;\n    if(is_session && is_login) {\n    return<React.Fragment>\n        {props.children}\n    </React.Fragment>\n    }\n\n    return null;\n}\n\nexport default Permit;"]},"metadata":{},"sourceType":"module"}