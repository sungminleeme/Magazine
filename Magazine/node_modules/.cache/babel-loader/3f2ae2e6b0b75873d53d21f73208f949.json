{"ast":null,"code":"const getCookie = name => {\n  let value = \"; \" + document.cookie;\n  let parts = value.split(`; ${name}=`);\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\n\nconst setCookie = (name, value, exp = 5) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n};\n\nconst deleteCookie = name => {\n  let date = new Date(\"2020-01-01\").toUTCString();\n  console.log(date);\n  document.cookie = name + \"=; expires=\" + date;\n};\n\nexport { getCookie, setCookie, deleteCookie };","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Cookie.js"],"names":["getCookie","name","value","document","cookie","parts","split","length","pop","shift","setCookie","exp","date","Date","setTime","getTime","toUTCString","deleteCookie","console","log"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,IAAD,IAAU;AAC1B,MAAIC,KAAK,GAAG,OAAKC,QAAQ,CAACC,MAA1B;AAEA,MAAIC,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAa,KAAIL,IAAK,GAAtB,CAAZ;;AAEA,MAAII,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOF,KAAK,CAACG,GAAN,GAAYF,KAAZ,CAAkB,GAAlB,EAAuBG,KAAvB,EAAP;AACD;AACF,CARD;;AAUA,MAAMC,SAAS,GAAG,CAACT,IAAD,EAAOC,KAAP,EAAcS,GAAG,GAAG,CAApB,KAA0B;AAC1C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,GAAG,GAAG,EAAN,GAAW,EAAX,GAAgB,EAAhB,GAAqB,IAAnD;AAEAR,EAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEH,IAAK,IAAGC,KAAM,aAAYU,IAAI,CAACI,WAAL,EAAmB,EAAlE;AACD,CALD;;AAOA,MAAMC,YAAY,GAAIhB,IAAD,IAAU;AAC3B,MAAIW,IAAI,GAAG,IAAIC,IAAJ,CAAS,YAAT,EAAuBG,WAAvB,EAAX;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEAT,EAAAA,QAAQ,CAACC,MAAT,GAAkBH,IAAI,GAAC,aAAL,GAAmBW,IAArC;AAEH,CAPD;;AASA,SAASZ,SAAT,EAAoBU,SAApB,EAA+BO,YAA/B","sourcesContent":["const getCookie = (name) => {\n  let value = \"; \"+document.cookie;\n\n  let parts = value.split(`; ${name}=`);\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\n\nconst setCookie = (name, value, exp = 5) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n};\n\nconst deleteCookie = (name) => {\n    let date = new Date(\"2020-01-01\").toUTCString();\n\n    console.log(date);\n\n    document.cookie = name+\"=; expires=\"+date;\n\n};\n\nexport { getCookie, setCookie, deleteCookie };\n"]},"metadata":{},"sourceType":"module"}