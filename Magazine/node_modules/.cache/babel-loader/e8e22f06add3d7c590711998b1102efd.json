{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\"; // actions\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\"; // actions creators\n\nconst logIn = createAction(LOG_IN, user => ({\n  user\n}));\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n}; //middleware actions\n\nconst loginAction = user => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(history);\n    dispatch(logIn(user));\n    history.push('/');\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [LOG_IN]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logIn,\n  logOut,\n  getUser,\n  loginAction\n};\nexport { actionCreators }; // const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});","map":{"version":3,"sources":["/Users/a111/Desktop/무제 폴더 2/image-community/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","LOG_IN","LOG_OUT","GET_USER","logIn","user","logOut","getUser","initialState","is_login","loginAction","dispatch","getState","history","console","log","push","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AAEA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,YAA9B,QAAiD,qBAAjD,C,CAEA;;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CAEA;;AACA,MAAMC,KAAK,GAAGT,YAAY,CAACM,MAAD,EAAUI,IAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAT,CAA1B;AACA,MAAMC,MAAM,GAAGX,YAAY,CAACO,OAAD,EAAWG,IAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAV,CAA3B;AACA,MAAME,OAAO,GAAGZ,YAAY,CAACQ,QAAD,EAAYE,IAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAX,CAA5B,C,CAEA;;AACA,MAAMG,YAAY,GAAG;AACjBH,EAAAA,IAAI,EAAE,IADW;AAEjBI,EAAAA,QAAQ,EAAE;AAFO,CAArB,C,CAKA;;AACA,MAAMC,WAAW,GAAIL,IAAD,IAAU;AAC1B,SAAO,UAAUM,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EAAwC;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,IAAAA,QAAQ,CAACP,KAAK,CAACC,IAAD,CAAN,CAAR;AACAQ,IAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACH,GAJD;AAKH,CAND,C,CAUA;;;AACA,eAAepB,aAAa,CAAC;AACzB,GAACK,MAAD,GAAU,CAACgB,KAAD,EAAQC,MAAR,KAAmBrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW;AACnDrB,IAAAA,SAAS,CAAC,UAAD,EAAa,SAAb,CAAT;AACAqB,IAAAA,KAAK,CAACd,IAAN,GAAaa,MAAM,CAACE,OAAP,CAAef,IAA5B;AACAc,IAAAA,KAAK,CAACV,QAAN,GAAiB,IAAjB;AACH,GAJmC,CADX;AAMzB,GAACP,OAAD,GAAW,CAACe,KAAD,EAAQC,MAAR,KAAmBrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW;AACpDnB,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAmB,IAAAA,KAAK,CAACd,IAAN,GAAa,IAAb;AACAc,IAAAA,KAAK,CAACV,QAAN,GAAiB,KAAjB;AACH,GAJoC,CANZ;AAWzB,GAACN,QAAD,GAAY,CAACc,KAAD,EAAQC,MAAR,KAAmBrB,OAAO,CAACoB,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB;AAXb,CAAD,EAaxBX,YAbwB,CAA5B,C,CAgBA;;AACA,MAAMa,cAAc,GAAG;AACnBjB,EAAAA,KADmB;AAEnBE,EAAAA,MAFmB;AAGnBC,EAAAA,OAHmB;AAInBG,EAAAA;AAJmB,CAAvB;AAOA,SACIW,cADJ,G,CAIA;AACA;AACA;AACA","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {produce} from \"immer\";\n\nimport {setCookie, getCookie, deleteCookie} from \"../../shared/Cookie\";\n\n// actions\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\n\n// actions creators\nconst logIn = createAction(LOG_IN, (user) => ({user}));\nconst logOut = createAction(LOG_OUT, (user) => ({user}));\nconst getUser = createAction(GET_USER, (user) => ({user}));\n\n// initialState\nconst initialState = {\n    user: null,\n    is_login: false\n};\n\n//middleware actions\nconst loginAction = (user) => {\n    return function (dispatch, getState, {history}){\n        console.log(history);\n        dispatch(logIn(user));\n        history.push('/');\n    }\n}\n\n\n\n//reducer\nexport default handleActions({\n    [LOG_IN]: (state, action) => produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n    }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n    }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {})\n    }, \n    initialState\n);\n\n// action creator export\nconst actionCreators = {\n    logIn,\n    logOut,\n    getUser,\n    loginAction,\n};\n\nexport {\n    actionCreators\n};\n\n// const logIn = (user) => { } const reducer = (state={}, action={}) => {\n// switch(action.type){         case \"LOG_IN\" : {             state.user =\n// action.user;         }     } } const reducer = handleAction({     [LOG_IN]:\n// (state, action) => {     }, }, {});"]},"metadata":{},"sourceType":"module"}