[{"/Users/a111/Desktop/무제 폴더 2/image-community /src/index.js":"1","/Users/a111/Desktop/무제 폴더 2/image-community /src/reportWebVitals.js":"2","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/configureStore.js":"3","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/App.js":"4","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Permit.js":"5","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/firebase.js":"6","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Login.js":"7","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/user.js":"8","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostList.js":"9","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Signup.js":"10","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostDetail.js":"11","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostWrite.js":"12","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Header.js":"13","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/index.js":"14","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Post.js":"15","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/common.js":"16","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Cookie.js":"17","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/CommentList.js":"18","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/CommentWrite.js":"19","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Upload.js":"20","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Grid.js":"21","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Image.js":"22","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Input.js":"23","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Button.js":"24","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Text.js":"25","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/post.js":"26","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/image.js":"27","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Search.js":"28","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Notification.js":"29","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Card.js":"30","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/InfinityScroll.js":"31","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Spinner.js":"32","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/comment.js":"33","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/NotiBadge.js":"34","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/index.js":"35","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/HeartButton.js":"36"},{"size":587,"mtime":1615040689000,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1614686851000,"results":"39","hashOfConfig":"38"},{"size":1370,"mtime":1616106369000,"results":"40","hashOfConfig":"38"},{"size":1954,"mtime":1615924169000,"results":"41","hashOfConfig":"38"},{"size":484,"mtime":1615544860000,"results":"42","hashOfConfig":"38"},{"size":751,"mtime":1633424430904,"results":"43","hashOfConfig":"38"},{"size":1808,"mtime":1616121964000,"results":"44","hashOfConfig":"38"},{"size":3472,"mtime":1615544851000,"results":"45","hashOfConfig":"38"},{"size":2103,"mtime":1633490794426,"results":"46","hashOfConfig":"38"},{"size":2362,"mtime":1615390205000,"results":"47","hashOfConfig":"38"},{"size":1083,"mtime":1616111561000,"results":"48","hashOfConfig":"38"},{"size":3275,"mtime":1633489756501,"results":"49","hashOfConfig":"38"},{"size":2140,"mtime":1633440382011,"results":"50","hashOfConfig":"38"},{"size":227,"mtime":1616021661000,"results":"51","hashOfConfig":"38"},{"size":3431,"mtime":1633501604302,"results":"52","hashOfConfig":"38"},{"size":159,"mtime":1615390055000,"results":"53","hashOfConfig":"38"},{"size":605,"mtime":1614880536000,"results":"54","hashOfConfig":"38"},{"size":1523,"mtime":1633480759075,"results":"55","hashOfConfig":"38"},{"size":992,"mtime":1616112769000,"results":"56","hashOfConfig":"38"},{"size":1261,"mtime":1633478636092,"results":"57","hashOfConfig":"38"},{"size":1135,"mtime":1616023133000,"results":"58","hashOfConfig":"38"},{"size":1593,"mtime":1633479394895,"results":"59","hashOfConfig":"38"},{"size":1585,"mtime":1616112515000,"results":"60","hashOfConfig":"38"},{"size":1340,"mtime":1633440633789,"results":"61","hashOfConfig":"38"},{"size":644,"mtime":1633491056898,"results":"62","hashOfConfig":"38"},{"size":10654,"mtime":1633502524653,"results":"63","hashOfConfig":"38"},{"size":1565,"mtime":1615736427000,"results":"64","hashOfConfig":"38"},{"size":635,"mtime":1615751043000,"results":"65","hashOfConfig":"38"},{"size":1067,"mtime":1616120711000,"results":"66","hashOfConfig":"38"},{"size":765,"mtime":1616121352000,"results":"67","hashOfConfig":"38"},{"size":1335,"mtime":1616021769000,"results":"68","hashOfConfig":"38"},{"size":4624,"mtime":1616021644000,"results":"69","hashOfConfig":"38"},{"size":3652,"mtime":1633498395730,"results":"70","hashOfConfig":"38"},{"size":1071,"mtime":1633424611446,"results":"71","hashOfConfig":"38"},{"size":135,"mtime":1633500090697,"results":"72","hashOfConfig":"38"},{"size":644,"mtime":1633501255097,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1xqd7fh",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a111/Desktop/무제 폴더 2/image-community /src/index.js",[],["161","162"],"/Users/a111/Desktop/무제 폴더 2/image-community /src/reportWebVitals.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/configureStore.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/App.js",["163","164"],"import \"./App.css\";\nimport React from \"react\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport PostList from \"../pages/PostList\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Search from \"./Search\";\nimport Notification from \"../pages/Notification\";\n\nimport Header from \"../components/Header\";\nimport { Grid, Button } from \"../elements\";\nimport Permit from \"./Permit\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { apiKey } from \"./firebase\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Header></Header>\n        <ConnectedRouter history={history}>\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/write/:id\" exact component={PostWrite} />\n          <Route path=\"/post/:id\" exact component={PostDetail} />\n          <Route path=\"/search\" exact component={Search} />\n          <Route path=\"/noti\" exact component={Notification} />\n        </ConnectedRouter>\n      </Grid>\n      <Permit>\n        <Button\n          is_float\n          text=\"+\"\n          _onClick={() => {\n            history.push(\"/write\");\n          }}\n        ></Button>\n      </Permit>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Permit.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/firebase.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Login.js",["165","166","167"],"import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport { getCookie, setCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/common\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n\n  const login = () => {\n\n    console.log(id);\n\n    if(id === \"\" || pwd === \"\"){\n      window.alert(\"아이디 혹은 비밀번호가 공란입니다! 입력해주세요!\");\n      return;\n    }\n\n    if(!emailCheck(id)){\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n\n    dispatch(userActions.loginFB(id, pwd));\n  };\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          로그인\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"패스워드\"\n            placeholder=\"패스워드 입력해주세요.\"\n            type=\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n            value={pwd}\n            is_submit\n            onSubmit={login}\n          />\n        </Grid>\n\n        <Button\n          text=\"로그인하기\"\n          _onClick={() => {\n            console.log(\"로그인 했어!\");\n            login();\n          }}\n        ></Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/user.js",["168"],"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\n\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n// actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n// initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\n// middleware actions\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\n      auth\n        .signInWithEmailAndPassword(id, pwd)\n        .then((user) => {\n          console.log(user);\n\n          dispatch(\n            setUser({\n              user_name: user.user.displayName,\n              id: id,\n              user_profile: \"\",\n              uid: user.user.uid,\n            })\n          );\n\n          history.push(\"/\");\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n\n          console.log(errorCode, errorMessage);\n        });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, { history }) {\n    auth\n      .createUserWithEmailAndPassword(id, pwd)\n      .then((user) => {\n        console.log(user);\n\n        auth.currentUser\n          .updateProfile({\n            displayName: user_name,\n          })\n          .then(() => {\n            dispatch(\n              setUser({\n                user_name: user_name,\n                id: id,\n                user_profile: \"\",\n                uid: user.user.uid,\n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n\n        // Signed in\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        console.log(errorCode, errorMessage);\n        // ..\n      });\n  };\n};\n\nconst loginCheckFB = () => {\n  return function (dispatch, getState, {history}){\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        dispatch(\n          setUser({\n            user_name: user.displayName,\n            user_profile: \"\",\n            id: user.email,\n            uid: user.uid,\n          })\n        );\n      }else{\n        dispatch(logOut());\n      }\n    })\n  }\n}\n\nconst logoutFB = () => {\n  return function (dispatch, getState, {history}) {\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace('/');\n    })\n  }\n}\n\n// reducer\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user;\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB,\n};\n\nexport { actionCreators };\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostList.js",["169"],"// PostList.js\nimport React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/Post\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements\";\n\n\nconst PostList = (props) => {\n    const dispatch = useDispatch();\n    const post_list = useSelector((state) => state.post.list);\n    const user_info = useSelector((state) => state.user.user);\n    const is_loading = useSelector((state) => state.post.is_loading);\n    const paging = useSelector((state) => state.post.paging);\n\n    const {history} = props;\n    \n    React.useEffect(() => {\n\n        if(post_list.length < 2){\n             dispatch(postActions.getPostFB());\n        }\n       \n    }, []);\n\n    return (\n      <React.Fragment>\n        <Grid bg={\"#E9E4F0\"} padding=\"20px 0px\">\n          {/* <Post/> */}\n          <InfinityScroll\n            callNext={() => {\n              dispatch(postActions.getPostFB(paging.next));\n            }}\n            is_next={paging.next ? true : false}\n            loading={is_loading}\n          >\n            {post_list.map((p, idx) => {\n              if (p.user_info.user_id === user_info?.uid) {\n                return (\n                  <Grid\n                    bg=\"#ffffff\"\n                    margin=\"8px 0px\"\n                    key={p.id}\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post key={p.id} {...p} is_me />\n                  </Grid>\n                );\n              } else {\n                return (\n                  <Grid\n                    key={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n                );\n              }\n            })}\n          </InfinityScroll>\n        </Grid>\n      </React.Fragment>\n    );\n}\n\nexport default PostList;\n\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Signup.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostDetail.js",["170"],"import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nimport Permit from \"../shared/Permit\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n\n  const user_info = useSelector((state) => state.user.user);\n\n  const post_list = useSelector((store) => store.post.list);\n\n  const post_idx = post_list.findIndex((p) => p.id === id);\n  const post = post_list[post_idx];\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n\n  return (\n    <React.Fragment>\n      {post && (\n        <Post {...post} is_me={post.user_info.user_id === user_info?.uid} />\n      )}\n      <Permit>\n        <CommentWrite post_id={id} />\n      </Permit>\n      <CommentList post_id={id} />\n    </React.Fragment>\n  );\n};\n\nexport default PostDetail;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/PostWrite.js",["171"],"import React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n\n  const { history } = props;\n\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n\n  const [layout_type, setLayoutType] = React.useState(\n    _post ? _post.layout_type : \"\");\n\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      window.alert(\"포스트!\");\n      history.goBack();\n\n      return;\n    }\n\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n    }\n  }, []);\n\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n  const changeLayoutType = (e) => {\n    setLayoutType(e.target.value);\n  };\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents, layout_type));\n  };\n\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, {contents: contents}));\n  }\n\n  \n\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗! 잠깐!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          로그인 하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text margin=\"0px\" size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n      </Grid>\n\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            미리보기\n          </Text>\n        </Grid>\n\n        <Image\n          shape=\"rectangle\"\n          src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <Input\n          type=\"text\"\n          value={layout_type}\n          _onChange={changeLayoutType}\n          label=\"레이아웃 타입\"\n          placeholder=\"a, b, c 중 하나를 골라주세요.\"\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <Input\n          value={contents}\n          _onChange={changeContents}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        {is_edit ? (\n          <Button text=\"게시글 수정\" _onClick={editPost}></Button>\n        ) : (\n          <Button text=\"게시글 작성\" _onClick={addPost}></Button>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Header.js",["172","173","174","175"],"import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\n\nimport NotiBadge from \"./NotiBadge\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key)? true : false;\n  \n  console.log(is_session);\n\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid is_flex padding=\"4px 16px\">\n          <Grid>\n            <Button size=\"24px\" bold _onClick={()=>{\n              history.push(\"/\");\n            }}  bold>\n              나만의 매거진\n            </Button>\n          </Grid>\n\n          <Grid is_flex>\n            <Button text=\"내정보\"></Button>\n            \n            <NotiBadge _onClick={() => {\n              history.push(\"/noti\");\n            }}\n            />\n            <Button\n              text=\"로그아웃\"\n              _onClick={() => {\n                dispatch(userActions.logoutFB());\n              }}\n            ></Button>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid is_flex padding=\"4px 16px\">\n        <Grid>\n          <Button size=\"24px\" bold _onClick={()=>{\n              history.push(\"/\");\n            }}>\n          나만의 매거진\n          </Button>\n        </Grid>\n\n        <Grid is_flex>\n          <Button\n            text=\"로그인\"\n            _onClick={() => {\n              history.push(\"/login\");\n            }}\n          ></Button>\n          <Button\n            text=\"회원가입\"\n            _onClick={() => {\n              history.push(\"/signup\");\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/index.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Post.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/common.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Cookie.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/components/CommentList.js",["176","177","178","179"],"import React from \"react\";\nimport {Grid, Image, Text} from \"../elements\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as commentActions} from \"../redux/modules/comment\";\n\nconst CommentList = (props) => {\n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment.list);\n\n  const {post_id} = props;\n\n  React.useEffect(() => {\n\n    if(!comment_list[post_id]){\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n  }, []);\n  \n  if(!comment_list[post_id] || !post_id){\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        {comment_list[post_id].map(c => {\n          return <CommentItem key={c.id} {...c}/>;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nCommentList.defaultProps = {\n  post_id: null,\n}\n\nexport default CommentList;\n\n\nconst CommentItem = (props) => {\n\n    const {user_profile, user_name, user_id, post_id, contents, insert_dt} = props;\n    return (\n        <Grid is_flex>\n            <Grid is_flex width=\"auto\">\n                <Image shape=\"circle\"/>\n                <Text bold>{user_name}</Text>\n            </Grid>\n            <Grid is_flex margin=\"0px 4px\">\n                <Text margin=\"0px\">{contents}</Text>\n                <Text margin=\"0px\">{insert_dt}</Text>\n            </Grid>\n        </Grid>\n    )\n}\n\nCommentItem.defaultProps = {\n    user_profile: \"\",\n    user_name: \"SungMin\",\n    user_id: \"\",\n    post_id: 1,\n    contents: \"리액트!\",\n    insert_dt: '2021-01-01 19:00:00'\n}","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/CommentWrite.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Upload.js",["180","181","182"],"import React from \"react\";\n\nimport {Button} from \"../elements\";\nimport {storage} from \"./firebase\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\";\n\nconst Upload = (props) => {\n    const dispatch = useDispatch();\n    const is_uploading = useSelector(state => state.image.uploading);\n    const fileInput = React.useRef();\n\n    const selectFile = (e) => {\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.files[0]);\n\n        console.log(fileInput.current.files[0]);\n\n        const reader = new FileReader();\n        const file = fileInput.current.files[0];\n\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n            console.log(reader.result);\n            dispatch(imageActions.setPreview(reader.result));\n        }\n\n    }\n\n    const uploadFB = () => {\n        let image = fileInput.current.files[0];\n        dispatch(imageActions.uploadImageFB(image));\n    }\n\n    return (\n        <React.Fragment>\n            <input type=\"file\" onChange={selectFile} ref={fileInput} disabled={is_uploading}/>\n            {/* <Button _onClick={uploadFB}>업로드하기</Button> */}\n        </React.Fragment>\n    )\n}\n\nexport default Upload;","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Grid.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Image.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Input.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Button.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Text.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/post.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/image.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/Search.js",["183","184"],"import React from \"react\";\nimport _ from \"lodash\";\n\nconst Search = () => {\n\n    const [text, setText] = React.useState(\"\");\n\n     const debounce = _.debounce((e) => {\n       console.log(\"debounce ::: \", e.target.value);\n     }, 1000);\n\n     const throttle = _.throttle((e) => {\n       console.log(\"throttle ::: \", e.target.value);\n     }, 1000);\n     \n    const keyPress = React.useCallback(debounce, []);\n\n    const onChange = (e) => {\n        setText(e.target.value);\n        keyPress(e);\n    }\n\n   \n\n    return (\n      <div>\n        <input type=\"text\" onChange={onChange} value={text}/>\n      </div>\n    );\n}\n\nexport default Search;","/Users/a111/Desktop/무제 폴더 2/image-community /src/pages/Notification.js",["185","186"],"import React from \"react\";\nimport { Grid, Text, Image } from \"../elements\";\nimport Card from \"../components/Card\";\n\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst Notification = (props) => {\n  const user = useSelector(state => state.user.user);\n  const [noti, setNoti] = React.useState([]);\n  \n  React.useEffect(() => {\n    if(!user){\n      return;\n    }\n\n    const notiDB = realtime.ref(`noti/${user.uid}/list`);\n\n    const _noti = notiDB.orderByChild(\"insert_dt\");\n\n    _noti.once(\"value\", snapshot => {\n      if(snapshot.exists()){\n        let _data = snapshot.val();\n\n        let _noti_list = Object.keys(_data).reverse().map(s => {\n          return _data[s];\n        })\n\n        console.log(_noti_list);\n        setNoti(_noti_list);\n      }\n    })\n\n\n  }, [user]);\n  \n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" bg=\"#EFF6FF\">\n        {noti.map((n, idx) => {\n          return <Card key={`noti_${idx}`} {...n} />;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Notification;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/Card.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/shared/InfinityScroll.js",["187","188","189"],"import React from \"react\";\nimport _ from \"lodash\";\nimport {Spinner} from \"../elements\";\n\nconst InfinityScroll = (props) => {\n\n    const {children, callNext, is_next, loading} = props;\n\n    const _handleScroll = _.throttle(() => {\n\n        if(loading){\n            return;\n        }\n\n        const {innerHeight} = window;\n        const {scrollHeight} = document.body;\n\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n        \n        if(scrollHeight - innerHeight - scrollTop < 200) {\n            callNext();\n        }\n    }, 300);\n\n    const handleScroll = React.useCallback(_handleScroll, [loading]);\n\n    React.useEffect(() => {\n        \n        if(loading){\n            return;\n        }\n\n        if(is_next){\n            window.addEventListener(\"scroll\", handleScroll);\n        }else{\n            window.removeEventListener(\"scroll\", handleScroll);\n        }\n        \n\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [is_next, loading]);\n\n    return (\n        <React.Fragment>\n            {props.children}\n            {is_next && (<Spinner/>)}\n        </React.Fragment>\n    )\n}\n\nInfinityScroll.defaultProps = {\n    children: null,\n    callNext: () => {},\n    is_next: false,\n    loading: false,\n}\n\nexport default InfinityScroll;","/Users/a111/Desktop/무제 폴더 2/image-community /src/elements/Spinner.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/redux/modules/comment.js",["190"],"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, realtime } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\n\nimport firebase from \"firebase/app\";\n\nimport { actionCreators as postActions } from \"./post\";\n\nconst SET_COMMENT = \"SET_COMMENT\";\nconst ADD_COMMENT = \"ADD_COMMENT\";\n\nconst LOADING = \"LOADING\";\n\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({\n  post_id,\n  comment_list,\n}));\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({\n  post_id,\n  comment,\n}));\n\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: {},\n  is_loading: false,\n};\n\nconst addCommentFB = (post_id, contents) => {\n  return function (dispatch, getState, { history }) {\n    const commentDB = firestore.collection(\"comment\");\n    const user_info = getState().user.user;\n\n    let comment = {\n      post_id: post_id,\n      user_id: user_info.uid,\n      user_name: user_info.user_name,\n      user_profile: user_info.user_profile,\n      contents: contents,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n    };\n\n    commentDB.add(comment).then((doc) => {\n      const postDB = firestore.collection(\"post\");\n\n      const post = getState().post.list.find((l) => l.id === post_id);\n\n      const increment = firebase.firestore.FieldValue.increment(1);\n\n      comment = {...comment, id: doc.id};\n      postDB\n        .doc(post_id)\n        .update({ comment_cnt: increment })\n        .then((_post) => {\n          \n          dispatch(addComment(post_id, comment));\n\n          if (post) {\n            dispatch(\n              postActions.editPost(post_id, {\n                comment_cnt: parseInt(post.comment_cnt) + 1,\n              })\n            );\n\n            const _noti_item = realtime.ref(`noti/${post.user_info.user_id}/list`).push();\n\n            _noti_item.set({\n              post_id: post.id,\n              user_name: comment.user_name,\n              image_url: post.image_url,\n              insert_dt: comment.insert_dt\n            }, (err) => {\n              if(err){\n                console.log(\"알림 저장에 실패했어요! \");\n              }else{\n                const notiDB = realtime.ref(`noti/${post.user_info.user_id}`);\n\n                notiDB.update({read: false});\n              }\n            });\n\n          }\n        });\n    });\n  };\n};\n\nconst getCommentFB = (post_id = null) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      return;\n    }\n\n    const commentDB = firestore.collection(\"comment\");\n\n    commentDB\n      .where(\"post_id\", \"==\", post_id)\n      .orderBy(\"insert_dt\", \"desc\")\n      .get()\n      .then((docs) => {\n        let list = [];\n\n        docs.forEach((doc) => {\n          list.push({ ...doc.data(), id: doc.id });\n        });\n\n        dispatch(setComment(post_id, list));\n      })\n      .catch((err) => {\n        console.log(\"댓글 정보를 가져올 수가 없네요!\", err);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [SET_COMMENT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list[action.payload.post_id] = action.payload.comment_list;\n      }),\n    [ADD_COMMENT]: (state, action) => produce(state, (draft) => {\n      draft.list[action.payload.post_id].unshift(action.payload.comment);\n    }),\n    [LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getCommentFB,\n  addCommentFB,\n  setComment,\n  addComment,\n};\n\nexport { actionCreators };\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/NotiBadge.js",["191"],"import React from \"react\";\nimport { Badge } from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nimport { realtime } from \"../shared/firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst NotiBadge = (props) => {\n  const [is_read, setIsRead] = React.useState(true);\n  const user_id = useSelector((state) => state.user.user.uid);\n  const notiCheck = () => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n    notiDB.update({read: true});\n    props._onClick();\n  };\n\n  React.useEffect(() => {\n    const notiDB = realtime.ref(`noti/${user_id}`);\n\n    notiDB.on(\"value\", (snapshot) => {\n      console.log(snapshot.val());\n\n      setIsRead(snapshot.val().read);\n    });\n\n    return () => notiDB.off();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Badge\n        color=\"secondary\"\n        variant=\"dot\"\n        invisible={is_read}\n        onClick={notiCheck}\n      >\n        <NotificationsIcon />\n      </Badge>\n    </React.Fragment>\n  );\n};\n\nNotiBadge.defaultProps = {\n  _onClick: () => {},\n};\n\nexport default NotiBadge;\n","/Users/a111/Desktop/무제 폴더 2/image-community /src/components/index.js",[],"/Users/a111/Desktop/무제 폴더 2/image-community /src/components/HeartButton.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":35,"column":6,"nodeType":"202","endLine":35,"endColumn":8,"suggestions":"203"},{"ruleId":"196","severity":1,"message":"204","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"205","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":30},{"ruleId":"196","severity":1,"message":"206","line":3,"column":32,"nodeType":"198","messageId":"199","endLine":3,"endColumn":44},{"ruleId":"196","severity":1,"message":"204","line":4,"column":21,"nodeType":"198","messageId":"199","endLine":4,"endColumn":30},{"ruleId":"200","severity":1,"message":"207","line":26,"column":8,"nodeType":"202","endLine":26,"endColumn":10,"suggestions":"208"},{"ruleId":"200","severity":1,"message":"209","line":29,"column":6,"nodeType":"202","endLine":29,"endColumn":8,"suggestions":"210"},{"ruleId":"200","severity":1,"message":"211","line":39,"column":6,"nodeType":"202","endLine":39,"endColumn":8,"suggestions":"212"},{"ruleId":"196","severity":1,"message":"213","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":20},{"ruleId":"196","severity":1,"message":"204","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"206","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":30,"column":17,"nodeType":"216","endLine":30,"endColumn":21},{"ruleId":"200","severity":1,"message":"217","line":18,"column":6,"nodeType":"202","endLine":18,"endColumn":8,"suggestions":"218"},{"ruleId":"196","severity":1,"message":"219","line":44,"column":12,"nodeType":"198","messageId":"199","endLine":44,"endColumn":24},{"ruleId":"196","severity":1,"message":"220","line":44,"column":37,"nodeType":"198","messageId":"199","endLine":44,"endColumn":44},{"ruleId":"196","severity":1,"message":"221","line":44,"column":46,"nodeType":"198","messageId":"199","endLine":44,"endColumn":53},{"ruleId":"196","severity":1,"message":"222","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":15},{"ruleId":"196","severity":1,"message":"223","line":4,"column":9,"nodeType":"198","messageId":"199","endLine":4,"endColumn":16},{"ruleId":"196","severity":1,"message":"224","line":33,"column":11,"nodeType":"198","messageId":"199","endLine":33,"endColumn":19},{"ruleId":"196","severity":1,"message":"225","line":12,"column":12,"nodeType":"198","messageId":"199","endLine":12,"endColumn":20},{"ruleId":"200","severity":1,"message":"226","line":16,"column":22,"nodeType":"227","endLine":16,"endColumn":39,"suggestions":"228"},{"ruleId":"196","severity":1,"message":"213","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":20},{"ruleId":"196","severity":1,"message":"229","line":2,"column":22,"nodeType":"198","messageId":"199","endLine":2,"endColumn":27},{"ruleId":"196","severity":1,"message":"230","line":7,"column":12,"nodeType":"198","messageId":"199","endLine":7,"endColumn":20},{"ruleId":"200","severity":1,"message":"231","line":25,"column":26,"nodeType":"227","endLine":25,"endColumn":43,"suggestions":"232"},{"ruleId":"200","severity":1,"message":"233","line":41,"column":8,"nodeType":"202","endLine":41,"endColumn":26,"suggestions":"234"},{"ruleId":"196","severity":1,"message":"235","line":25,"column":7,"nodeType":"198","messageId":"199","endLine":25,"endColumn":14},{"ruleId":"200","severity":1,"message":"236","line":27,"column":6,"nodeType":"202","endLine":27,"endColumn":8,"suggestions":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'is_session'. Either include them or remove the dependency array.","ArrayExpression",["240"],"'getCookie' is defined but never used.","'setCookie' is defined but never used.","'deleteCookie' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'post_list.length'. Either include them or remove the dependency array.",["241"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'post'. Either include them or remove the dependency array.",["242"],"React Hook React.useEffect has missing dependencies: '_post', 'dispatch', 'history', and 'is_edit'. Either include them or remove the dependency array.",["243"],"'Text' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook React.useEffect has missing dependencies: 'comment_list', 'dispatch', and 'post_id'. Either include them or remove the dependency array.",["244"],"'user_profile' is assigned a value but never used.","'user_id' is assigned a value but never used.","'post_id' is assigned a value but never used.","'Button' is defined but never used.","'storage' is defined but never used.","'uploadFB' is assigned a value but never used.","'throttle' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'debounce'. Either include it or remove the dependency array.","MemberExpression",["245"],"'Image' is defined but never used.","'children' is assigned a value but never used.","React Hook useCallback has a missing dependency: '_handleScroll'. Either include it or remove the dependency array.",["246"],"React Hook React.useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["247"],"'loading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [dispatch, is_session]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, post_list.length]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, id, post]",{"range":"271","text":"272"},"Update the dependencies array to be: [_post, dispatch, history, is_edit]",{"range":"273","text":"274"},"Update the dependencies array to be: [comment_list, dispatch, post_id]",{"range":"275","text":"276"},"Update the dependencies array to be: [debounce]",{"range":"277","text":"278"},"Update the dependencies array to be: [_handleScroll]",{"range":"279","text":"280"},"Update the dependencies array to be: [handleScroll, is_next, loading]",{"range":"281","text":"282"},"Update the dependencies array to be: [user_id]",{"range":"283","text":"284"},[1069,1071],"[dispatch, is_session]",[791,793],"[dispatch, post_list.length]",[780,782],"[dispatch, id, post]",[1198,1200],"[_post, dispatch, history, is_edit]",[490,492],"[comment_list, dispatch, post_id]",[401,403],"[debounce]",[661,670],"[_handleScroll]",[1024,1042],"[handleScroll, is_next, loading]",[753,755],"[user_id]"]